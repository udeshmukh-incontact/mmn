//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManageMyNotificationsBusinessLayer.inContactSalesforceService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerOrder", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CustomerOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CadebillAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] ListItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CadebillAccountNumber {
            get {
                return this.CadebillAccountNumberField;
            }
            set {
                if ((this.CadebillAccountNumberField.Equals(value) != true)) {
                    this.CadebillAccountNumberField = value;
                    this.RaisePropertyChanged("CadebillAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerNotes {
            get {
                return this.CustomerNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNotesField, value) != true)) {
                    this.CustomerNotesField = value;
                    this.RaisePropertyChanged("CustomerNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastComment {
            get {
                return this.LastCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LastCommentField, value) != true)) {
                    this.LastCommentField = value;
                    this.RaisePropertyChanged("LastComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] ListItems {
            get {
                return this.ListItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemsField, value) != true)) {
                    this.ListItemsField = value;
                    this.RaisePropertyChanged("ListItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDateTime {
            get {
                return this.OrderDateTimeField;
            }
            set {
                if ((this.OrderDateTimeField.Equals(value) != true)) {
                    this.OrderDateTimeField = value;
                    this.RaisePropertyChanged("OrderDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusField, value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLineGeneralItems", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class OrderLineGeneralItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InstrumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstrumentTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemComment[] LineItemCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineItemResolutionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderErrorDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineItemsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductSKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] RelatedItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedLineItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelatedLineItemStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineSpecificItem[] SpecificItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InstrumentType {
            get {
                return this.InstrumentTypeField;
            }
            set {
                if ((this.InstrumentTypeField.Equals(value) != true)) {
                    this.InstrumentTypeField = value;
                    this.RaisePropertyChanged("InstrumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstrumentTypeName {
            get {
                return this.InstrumentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstrumentTypeNameField, value) != true)) {
                    this.InstrumentTypeNameField = value;
                    this.RaisePropertyChanged("InstrumentTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemIdField, value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemStatus {
            get {
                return this.ItemStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemStatusField, value) != true)) {
                    this.ItemStatusField = value;
                    this.RaisePropertyChanged("ItemStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastComment {
            get {
                return this.LastCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.LastCommentField, value) != true)) {
                    this.LastCommentField = value;
                    this.RaisePropertyChanged("LastComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemComment[] LineItemComments {
            get {
                return this.LineItemCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.LineItemCommentsField, value) != true)) {
                    this.LineItemCommentsField = value;
                    this.RaisePropertyChanged("LineItemComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineItemResolution {
            get {
                return this.LineItemResolutionField;
            }
            set {
                if ((object.ReferenceEquals(this.LineItemResolutionField, value) != true)) {
                    this.LineItemResolutionField = value;
                    this.RaisePropertyChanged("LineItemResolution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderErrorDetail {
            get {
                return this.OrderErrorDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderErrorDetailField, value) != true)) {
                    this.OrderErrorDetailField = value;
                    this.RaisePropertyChanged("OrderErrorDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIDField, value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineItemsName {
            get {
                return this.OrderLineItemsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineItemsNameField, value) != true)) {
                    this.OrderLineItemsNameField = value;
                    this.RaisePropertyChanged("OrderLineItemsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductSKU {
            get {
                return this.ProductSKUField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductSKUField, value) != true)) {
                    this.ProductSKUField = value;
                    this.RaisePropertyChanged("ProductSKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] RelatedItems {
            get {
                return this.RelatedItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedItemsField, value) != true)) {
                    this.RelatedItemsField = value;
                    this.RaisePropertyChanged("RelatedItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedLineItemID {
            get {
                return this.RelatedLineItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedLineItemIDField, value) != true)) {
                    this.RelatedLineItemIDField = value;
                    this.RaisePropertyChanged("RelatedLineItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelatedLineItemStatus {
            get {
                return this.RelatedLineItemStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedLineItemStatusField, value) != true)) {
                    this.RelatedLineItemStatusField = value;
                    this.RaisePropertyChanged("RelatedLineItemStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineSpecificItem[] SpecificItems {
            get {
                return this.SpecificItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificItemsField, value) != true)) {
                    this.SpecificItemsField = value;
                    this.RaisePropertyChanged("SpecificItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineItemComment", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class LineItemComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLineSpecificItem", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class OrderLineSpecificItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineGeneralItemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineSpecificItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemValue {
            get {
                return this.ItemValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemValueField, value) != true)) {
                    this.ItemValueField = value;
                    this.RaisePropertyChanged("ItemValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineGeneralItemID {
            get {
                return this.OrderLineGeneralItemIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineGeneralItemIDField, value) != true)) {
                    this.OrderLineGeneralItemIDField = value;
                    this.RaisePropertyChanged("OrderLineGeneralItemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineSpecificItemName {
            get {
                return this.OrderLineSpecificItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineSpecificItemNameField, value) != true)) {
                    this.OrderLineSpecificItemNameField = value;
                    this.RaisePropertyChanged("OrderLineSpecificItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificItem {
            get {
                return this.SpecificItemField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificItemField, value) != true)) {
                    this.SpecificItemField = value;
                    this.RaisePropertyChanged("SpecificItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Q_A", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Q_A : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Answer__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Environment__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KnowledgeArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Question__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer__c {
            get {
                return this.Answer__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Answer__cField, value) != true)) {
                    this.Answer__cField = value;
                    this.RaisePropertyChanged("Answer__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelections {
            get {
                return this.DataCategorySelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategorySelectionsField, value) != true)) {
                    this.DataCategorySelectionsField = value;
                    this.RaisePropertyChanged("DataCategorySelections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Environment__c {
            get {
                return this.Environment__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Environment__cField, value) != true)) {
                    this.Environment__cField = value;
                    this.RaisePropertyChanged("Environment__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KnowledgeArticleId {
            get {
                return this.KnowledgeArticleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleIdField, value) != true)) {
                    this.KnowledgeArticleIdField = value;
                    this.RaisePropertyChanged("KnowledgeArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes__c {
            get {
                return this.Notes__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Notes__cField, value) != true)) {
                    this.Notes__cField = value;
                    this.RaisePropertyChanged("Notes__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Question__c {
            get {
                return this.Question__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Question__cField, value) != true)) {
                    this.Question__cField = value;
                    this.RaisePropertyChanged("Question__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfDataCategorySelectionR4Aesgjl", Namespace="http://schemas.datacontract.org/2004/07/Salesforce.Common.Models.Json")]
    [System.SerializableAttribute()]
    public partial class QueryResultOfDataCategorySelectionR4Aesgjl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextRecordsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.DataCategorySelection[] RecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextRecordsUrl {
            get {
                return this.NextRecordsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRecordsUrlField, value) != true)) {
                    this.NextRecordsUrlField = value;
                    this.RaisePropertyChanged("NextRecordsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.DataCategorySelection[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSize {
            get {
                return this.TotalSizeField;
            }
            set {
                if ((this.TotalSizeField.Equals(value) != true)) {
                    this.TotalSizeField = value;
                    this.RaisePropertyChanged("TotalSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataCategorySelection", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class DataCategorySelection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataCategoryGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataCategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataCategoryGroupName {
            get {
                return this.DataCategoryGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategoryGroupNameField, value) != true)) {
                    this.DataCategoryGroupNameField = value;
                    this.RaisePropertyChanged("DataCategoryGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataCategoryName {
            get {
                return this.DataCategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategoryNameField, value) != true)) {
                    this.DataCategoryNameField = value;
                    this.RaisePropertyChanged("DataCategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Solution", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Solution : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cause__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Environment__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KnowledgeArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Resolution__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Symptom__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause__c {
            get {
                return this.Cause__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Cause__cField, value) != true)) {
                    this.Cause__cField = value;
                    this.RaisePropertyChanged("Cause__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelections {
            get {
                return this.DataCategorySelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategorySelectionsField, value) != true)) {
                    this.DataCategorySelectionsField = value;
                    this.RaisePropertyChanged("DataCategorySelections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Environment__c {
            get {
                return this.Environment__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Environment__cField, value) != true)) {
                    this.Environment__cField = value;
                    this.RaisePropertyChanged("Environment__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KnowledgeArticleId {
            get {
                return this.KnowledgeArticleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleIdField, value) != true)) {
                    this.KnowledgeArticleIdField = value;
                    this.RaisePropertyChanged("KnowledgeArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes__c {
            get {
                return this.Notes__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Notes__cField, value) != true)) {
                    this.Notes__cField = value;
                    this.RaisePropertyChanged("Notes__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resolution__c {
            get {
                return this.Resolution__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Resolution__cField, value) != true)) {
                    this.Resolution__cField = value;
                    this.RaisePropertyChanged("Resolution__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symptom__c {
            get {
                return this.Symptom__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Symptom__cField, value) != true)) {
                    this.Symptom__cField = value;
                    this.RaisePropertyChanged("Symptom__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HowTo", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class HowTo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Environment__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KnowledgeArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Objective__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Procedure__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelections {
            get {
                return this.DataCategorySelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategorySelectionsField, value) != true)) {
                    this.DataCategorySelectionsField = value;
                    this.RaisePropertyChanged("DataCategorySelections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Environment__c {
            get {
                return this.Environment__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Environment__cField, value) != true)) {
                    this.Environment__cField = value;
                    this.RaisePropertyChanged("Environment__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KnowledgeArticleId {
            get {
                return this.KnowledgeArticleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleIdField, value) != true)) {
                    this.KnowledgeArticleIdField = value;
                    this.RaisePropertyChanged("KnowledgeArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes__c {
            get {
                return this.Notes__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Notes__cField, value) != true)) {
                    this.Notes__cField = value;
                    this.RaisePropertyChanged("Notes__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Objective__c {
            get {
                return this.Objective__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Objective__cField, value) != true)) {
                    this.Objective__cField = value;
                    this.RaisePropertyChanged("Objective__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Procedure__c {
            get {
                return this.Procedure__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Procedure__cField, value) != true)) {
                    this.Procedure__cField = value;
                    this.RaisePropertyChanged("Procedure__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KnowledgeArticleVersion", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class KnowledgeArticleVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KnowledgeArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleType {
            get {
                return this.ArticleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleTypeField, value) != true)) {
                    this.ArticleTypeField = value;
                    this.RaisePropertyChanged("ArticleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KnowledgeArticleId {
            get {
                return this.KnowledgeArticleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleIdField, value) != true)) {
                    this.KnowledgeArticleIdField = value;
                    this.RaisePropertyChanged("KnowledgeArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Case", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase))]
    public partial class Case : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Assigned_To__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillAccountNo__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillCreditDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillTaxCreditAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDate__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerOrder__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVisibleInSelfServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NICE_Case__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact Primary_Contact__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_or_Service_Details__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_or_Service__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Request_Type__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubProductorService__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuppliedEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TSAPrimary__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TSMPrimary__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TsaPrimary__c1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TsmPrimary__c1Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Assigned_To__c {
            get {
                return this.Assigned_To__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Assigned_To__cField, value) != true)) {
                    this.Assigned_To__cField = value;
                    this.RaisePropertyChanged("Assigned_To__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillAccountNo__c {
            get {
                return this.CadebillAccountNo__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillAccountNo__cField, value) != true)) {
                    this.CadebillAccountNo__cField = value;
                    this.RaisePropertyChanged("CadebillAccountNo__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillCreditAmount {
            get {
                return this.CadebillCreditAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillCreditAmountField, value) != true)) {
                    this.CadebillCreditAmountField = value;
                    this.RaisePropertyChanged("CadebillCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillCreditDate {
            get {
                return this.CadebillCreditDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillCreditDateField, value) != true)) {
                    this.CadebillCreditDateField = value;
                    this.RaisePropertyChanged("CadebillCreditDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillTaxCreditAmount {
            get {
                return this.CadebillTaxCreditAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillTaxCreditAmountField, value) != true)) {
                    this.CadebillTaxCreditAmountField = value;
                    this.RaisePropertyChanged("CadebillTaxCreditAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseOwner {
            get {
                return this.CaseOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseOwnerField, value) != true)) {
                    this.CaseOwnerField = value;
                    this.RaisePropertyChanged("CaseOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdField, value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate__c {
            get {
                return this.CreatedDate__cField;
            }
            set {
                if ((this.CreatedDate__cField.Equals(value) != true)) {
                    this.CreatedDate__cField = value;
                    this.RaisePropertyChanged("CreatedDate__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerOrder__c {
            get {
                return this.CustomerOrder__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerOrder__cField, value) != true)) {
                    this.CustomerOrder__cField = value;
                    this.RaisePropertyChanged("CustomerOrder__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisibleInSelfService {
            get {
                return this.IsVisibleInSelfServiceField;
            }
            set {
                if ((this.IsVisibleInSelfServiceField.Equals(value) != true)) {
                    this.IsVisibleInSelfServiceField = value;
                    this.RaisePropertyChanged("IsVisibleInSelfService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NICE_Case__c {
            get {
                return this.NICE_Case__cField;
            }
            set {
                if ((object.ReferenceEquals(this.NICE_Case__cField, value) != true)) {
                    this.NICE_Case__cField = value;
                    this.RaisePropertyChanged("NICE_Case__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIdField, value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact Primary_Contact__c {
            get {
                return this.Primary_Contact__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Primary_Contact__cField, value) != true)) {
                    this.Primary_Contact__cField = value;
                    this.RaisePropertyChanged("Primary_Contact__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_or_Service_Details__c {
            get {
                return this.Product_or_Service_Details__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_or_Service_Details__cField, value) != true)) {
                    this.Product_or_Service_Details__cField = value;
                    this.RaisePropertyChanged("Product_or_Service_Details__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_or_Service__c {
            get {
                return this.Product_or_Service__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_or_Service__cField, value) != true)) {
                    this.Product_or_Service__cField = value;
                    this.RaisePropertyChanged("Product_or_Service__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordTypeId {
            get {
                return this.RecordTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeIdField, value) != true)) {
                    this.RecordTypeIdField = value;
                    this.RaisePropertyChanged("RecordTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Request_Type__c {
            get {
                return this.Request_Type__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Request_Type__cField, value) != true)) {
                    this.Request_Type__cField = value;
                    this.RaisePropertyChanged("Request_Type__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubProductorService__c {
            get {
                return this.SubProductorService__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SubProductorService__cField, value) != true)) {
                    this.SubProductorService__cField = value;
                    this.RaisePropertyChanged("SubProductorService__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuppliedEmail {
            get {
                return this.SuppliedEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.SuppliedEmailField, value) != true)) {
                    this.SuppliedEmailField = value;
                    this.RaisePropertyChanged("SuppliedEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TSAPrimary__c {
            get {
                return this.TSAPrimary__cField;
            }
            set {
                if ((object.ReferenceEquals(this.TSAPrimary__cField, value) != true)) {
                    this.TSAPrimary__cField = value;
                    this.RaisePropertyChanged("TSAPrimary__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TSMPrimary__c {
            get {
                return this.TSMPrimary__cField;
            }
            set {
                if ((object.ReferenceEquals(this.TSMPrimary__cField, value) != true)) {
                    this.TSMPrimary__cField = value;
                    this.RaisePropertyChanged("TSMPrimary__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="TsaPrimary__c")]
        public string TsaPrimary__c1 {
            get {
                return this.TsaPrimary__c1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TsaPrimary__c1Field, value) != true)) {
                    this.TsaPrimary__c1Field = value;
                    this.RaisePropertyChanged("TsaPrimary__c1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="TsmPrimary__c")]
        public string TsmPrimary__c1 {
            get {
                return this.TsmPrimary__c1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TsmPrimary__c1Field, value) != true)) {
                    this.TsmPrimary__c1Field = value;
                    this.RaisePropertyChanged("TsmPrimary__c1");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdfsGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contact_Role__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeactivatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailingCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailingCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailingPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailingStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailingStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdfsGuid {
            get {
                return this.AdfsGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.AdfsGuidField, value) != true)) {
                    this.AdfsGuidField = value;
                    this.RaisePropertyChanged("AdfsGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact_Role__c {
            get {
                return this.Contact_Role__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Contact_Role__cField, value) != true)) {
                    this.Contact_Role__cField = value;
                    this.RaisePropertyChanged("Contact_Role__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deactivated {
            get {
                return this.DeactivatedField;
            }
            set {
                if ((this.DeactivatedField.Equals(value) != true)) {
                    this.DeactivatedField = value;
                    this.RaisePropertyChanged("Deactivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailingCity {
            get {
                return this.MailingCityField;
            }
            set {
                if ((object.ReferenceEquals(this.MailingCityField, value) != true)) {
                    this.MailingCityField = value;
                    this.RaisePropertyChanged("MailingCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailingCountry {
            get {
                return this.MailingCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.MailingCountryField, value) != true)) {
                    this.MailingCountryField = value;
                    this.RaisePropertyChanged("MailingCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailingPostalCode {
            get {
                return this.MailingPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MailingPostalCodeField, value) != true)) {
                    this.MailingPostalCodeField = value;
                    this.RaisePropertyChanged("MailingPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailingState {
            get {
                return this.MailingStateField;
            }
            set {
                if ((object.ReferenceEquals(this.MailingStateField, value) != true)) {
                    this.MailingStateField = value;
                    this.RaisePropertyChanged("MailingState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MailingStreet {
            get {
                return this.MailingStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.MailingStreetField, value) != true)) {
                    this.MailingStreetField = value;
                    this.RaisePropertyChanged("MailingStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerContactId {
            get {
                return this.PartnerContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerContactIdField, value) != true)) {
                    this.PartnerContactIdField = value;
                    this.RaisePropertyChanged("PartnerContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordTypeId {
            get {
                return this.RecordTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeIdField, value) != true)) {
                    this.RecordTypeIdField = value;
                    this.RaisePropertyChanged("RecordTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerCase", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class PartnerCase : ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalRequestID__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string X3rdPartyVendorTicket__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string X3rdPartyVendororPartner__cField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalRequestID__c {
            get {
                return this.ExternalRequestID__cField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalRequestID__cField, value) != true)) {
                    this.ExternalRequestID__cField = value;
                    this.RaisePropertyChanged("ExternalRequestID__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X3rdPartyVendorTicket__c {
            get {
                return this.X3rdPartyVendorTicket__cField;
            }
            set {
                if ((object.ReferenceEquals(this.X3rdPartyVendorTicket__cField, value) != true)) {
                    this.X3rdPartyVendorTicket__cField = value;
                    this.RaisePropertyChanged("X3rdPartyVendorTicket__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string X3rdPartyVendororPartner__c {
            get {
                return this.X3rdPartyVendororPartner__cField;
            }
            set {
                if ((object.ReferenceEquals(this.X3rdPartyVendororPartner__cField, value) != true)) {
                    this.X3rdPartyVendororPartner__cField = value;
                    this.RaisePropertyChanged("X3rdPartyVendororPartner__c");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseDetail", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CaseDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillAccountNo__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfCaseArticleFeedR4Aesgjl CaseArticlesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfAttachmentFeedR4Aesgjl CaseAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfCaseCommentFeedR4Aesgjl CaseCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfEmailMessageFeedR4Aesgjl CaseEmailMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NICE_Case__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_or_Service__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Request_Type__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Severity__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubProductorService__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillAccountNo__c {
            get {
                return this.CadebillAccountNo__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillAccountNo__cField, value) != true)) {
                    this.CadebillAccountNo__cField = value;
                    this.RaisePropertyChanged("CadebillAccountNo__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfCaseArticleFeedR4Aesgjl CaseArticles {
            get {
                return this.CaseArticlesField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseArticlesField, value) != true)) {
                    this.CaseArticlesField = value;
                    this.RaisePropertyChanged("CaseArticles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfAttachmentFeedR4Aesgjl CaseAttachments {
            get {
                return this.CaseAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseAttachmentsField, value) != true)) {
                    this.CaseAttachmentsField = value;
                    this.RaisePropertyChanged("CaseAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfCaseCommentFeedR4Aesgjl CaseComments {
            get {
                return this.CaseCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseCommentsField, value) != true)) {
                    this.CaseCommentsField = value;
                    this.RaisePropertyChanged("CaseComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfEmailMessageFeedR4Aesgjl CaseEmailMessages {
            get {
                return this.CaseEmailMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseEmailMessagesField, value) != true)) {
                    this.CaseEmailMessagesField = value;
                    this.RaisePropertyChanged("CaseEmailMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdField, value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NICE_Case__c {
            get {
                return this.NICE_Case__cField;
            }
            set {
                if ((object.ReferenceEquals(this.NICE_Case__cField, value) != true)) {
                    this.NICE_Case__cField = value;
                    this.RaisePropertyChanged("NICE_Case__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerIdField, value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_or_Service__c {
            get {
                return this.Product_or_Service__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_or_Service__cField, value) != true)) {
                    this.Product_or_Service__cField = value;
                    this.RaisePropertyChanged("Product_or_Service__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordTypeId {
            get {
                return this.RecordTypeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeIdField, value) != true)) {
                    this.RecordTypeIdField = value;
                    this.RaisePropertyChanged("RecordTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Request_Type__c {
            get {
                return this.Request_Type__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Request_Type__cField, value) != true)) {
                    this.Request_Type__cField = value;
                    this.RaisePropertyChanged("Request_Type__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Severity__c {
            get {
                return this.Severity__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Severity__cField, value) != true)) {
                    this.Severity__cField = value;
                    this.RaisePropertyChanged("Severity__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubProductorService__c {
            get {
                return this.SubProductorService__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SubProductorService__cField, value) != true)) {
                    this.SubProductorService__cField = value;
                    this.RaisePropertyChanged("SubProductorService__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Account_ID__CField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Account_ID__c1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingStreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CG_Account_Status__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CG_Account_Type__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CG_Disconnect_Date__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CG_Established_Date__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillAccountNoText__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CadebillAccountNo__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CostGuard_Acct__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditClass__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FedRamp__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> GovernmentAccount__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HipaaAccount__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntacctID__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAssociatedAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Main_Billing_Phone__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> PS_on_Demand__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentAccountNumber__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Partner_Customer_Account_ID__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> Premise_Engage_Customer__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecordType RecordTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorCorpID__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string inContact_Cluster__cField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account_ID__C {
            get {
                return this.Account_ID__CField;
            }
            set {
                if ((object.ReferenceEquals(this.Account_ID__CField, value) != true)) {
                    this.Account_ID__CField = value;
                    this.RaisePropertyChanged("Account_ID__C");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="Account_ID__c")]
        public System.Nullable<decimal> Account_ID__c1 {
            get {
                return this.Account_ID__c1Field;
            }
            set {
                if ((this.Account_ID__c1Field.Equals(value) != true)) {
                    this.Account_ID__c1Field = value;
                    this.RaisePropertyChanged("Account_ID__c1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingCity {
            get {
                return this.BillingCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingCityField, value) != true)) {
                    this.BillingCityField = value;
                    this.RaisePropertyChanged("BillingCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingCountry {
            get {
                return this.BillingCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingCountryField, value) != true)) {
                    this.BillingCountryField = value;
                    this.RaisePropertyChanged("BillingCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingPostalCode {
            get {
                return this.BillingPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingPostalCodeField, value) != true)) {
                    this.BillingPostalCodeField = value;
                    this.RaisePropertyChanged("BillingPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingState {
            get {
                return this.BillingStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingStateField, value) != true)) {
                    this.BillingStateField = value;
                    this.RaisePropertyChanged("BillingState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingStreet {
            get {
                return this.BillingStreetField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingStreetField, value) != true)) {
                    this.BillingStreetField = value;
                    this.RaisePropertyChanged("BillingStreet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CG_Account_Status__c {
            get {
                return this.CG_Account_Status__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CG_Account_Status__cField, value) != true)) {
                    this.CG_Account_Status__cField = value;
                    this.RaisePropertyChanged("CG_Account_Status__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CG_Account_Type__c {
            get {
                return this.CG_Account_Type__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CG_Account_Type__cField, value) != true)) {
                    this.CG_Account_Type__cField = value;
                    this.RaisePropertyChanged("CG_Account_Type__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CG_Disconnect_Date__c {
            get {
                return this.CG_Disconnect_Date__cField;
            }
            set {
                if ((this.CG_Disconnect_Date__cField.Equals(value) != true)) {
                    this.CG_Disconnect_Date__cField = value;
                    this.RaisePropertyChanged("CG_Disconnect_Date__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CG_Established_Date__c {
            get {
                return this.CG_Established_Date__cField;
            }
            set {
                if ((this.CG_Established_Date__cField.Equals(value) != true)) {
                    this.CG_Established_Date__cField = value;
                    this.RaisePropertyChanged("CG_Established_Date__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillAccountNoText__c {
            get {
                return this.CadebillAccountNoText__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillAccountNoText__cField, value) != true)) {
                    this.CadebillAccountNoText__cField = value;
                    this.RaisePropertyChanged("CadebillAccountNoText__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> CadebillAccountNo__c {
            get {
                return this.CadebillAccountNo__cField;
            }
            set {
                if ((this.CadebillAccountNo__cField.Equals(value) != true)) {
                    this.CadebillAccountNo__cField = value;
                    this.RaisePropertyChanged("CadebillAccountNo__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostGuard_Acct__c {
            get {
                return this.CostGuard_Acct__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CostGuard_Acct__cField, value) != true)) {
                    this.CostGuard_Acct__cField = value;
                    this.RaisePropertyChanged("CostGuard_Acct__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditClass__c {
            get {
                return this.CreditClass__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditClass__cField, value) != true)) {
                    this.CreditClass__cField = value;
                    this.RaisePropertyChanged("CreditClass__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FedRamp__c {
            get {
                return this.FedRamp__cField;
            }
            set {
                if ((object.ReferenceEquals(this.FedRamp__cField, value) != true)) {
                    this.FedRamp__cField = value;
                    this.RaisePropertyChanged("FedRamp__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> GovernmentAccount__c {
            get {
                return this.GovernmentAccount__cField;
            }
            set {
                if ((this.GovernmentAccount__cField.Equals(value) != true)) {
                    this.GovernmentAccount__cField = value;
                    this.RaisePropertyChanged("GovernmentAccount__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HipaaAccount__c {
            get {
                return this.HipaaAccount__cField;
            }
            set {
                if ((this.HipaaAccount__cField.Equals(value) != true)) {
                    this.HipaaAccount__cField = value;
                    this.RaisePropertyChanged("HipaaAccount__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntacctID__c {
            get {
                return this.IntacctID__cField;
            }
            set {
                if ((object.ReferenceEquals(this.IntacctID__cField, value) != true)) {
                    this.IntacctID__cField = value;
                    this.RaisePropertyChanged("IntacctID__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAssociatedAccount {
            get {
                return this.IsAssociatedAccountField;
            }
            set {
                if ((this.IsAssociatedAccountField.Equals(value) != true)) {
                    this.IsAssociatedAccountField = value;
                    this.RaisePropertyChanged("IsAssociatedAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Main_Billing_Phone__c {
            get {
                return this.Main_Billing_Phone__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Main_Billing_Phone__cField, value) != true)) {
                    this.Main_Billing_Phone__cField = value;
                    this.RaisePropertyChanged("Main_Billing_Phone__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> PS_on_Demand__c {
            get {
                return this.PS_on_Demand__cField;
            }
            set {
                if ((this.PS_on_Demand__cField.Equals(value) != true)) {
                    this.PS_on_Demand__cField = value;
                    this.RaisePropertyChanged("PS_on_Demand__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentAccountNumber__c {
            get {
                return this.ParentAccountNumber__cField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentAccountNumber__cField, value) != true)) {
                    this.ParentAccountNumber__cField = value;
                    this.RaisePropertyChanged("ParentAccountNumber__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Partner_Customer_Account_ID__c {
            get {
                return this.Partner_Customer_Account_ID__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Partner_Customer_Account_ID__cField, value) != true)) {
                    this.Partner_Customer_Account_ID__cField = value;
                    this.RaisePropertyChanged("Partner_Customer_Account_ID__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Premise_Engage_Customer__c {
            get {
                return this.Premise_Engage_Customer__cField;
            }
            set {
                if ((this.Premise_Engage_Customer__cField.Equals(value) != true)) {
                    this.Premise_Engage_Customer__cField = value;
                    this.RaisePropertyChanged("Premise_Engage_Customer__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecordType RecordType {
            get {
                return this.RecordTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeField, value) != true)) {
                    this.RecordTypeField = value;
                    this.RaisePropertyChanged("RecordType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorCorpID__c {
            get {
                return this.VendorCorpID__cField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorCorpID__cField, value) != true)) {
                    this.VendorCorpID__cField = value;
                    this.RaisePropertyChanged("VendorCorpID__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string inContact_Cluster__c {
            get {
                return this.inContact_Cluster__cField;
            }
            set {
                if ((object.ReferenceEquals(this.inContact_Cluster__cField, value) != true)) {
                    this.inContact_Cluster__cField = value;
                    this.RaisePropertyChanged("inContact_Cluster__c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCaseArticleFeedR4Aesgjl", Namespace="http://schemas.datacontract.org/2004/07/Salesforce.Common.Models.Json")]
    [System.SerializableAttribute()]
    public partial class QueryResultOfCaseArticleFeedR4Aesgjl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextRecordsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseArticleFeed[] RecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextRecordsUrl {
            get {
                return this.NextRecordsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRecordsUrlField, value) != true)) {
                    this.NextRecordsUrlField = value;
                    this.RaisePropertyChanged("NextRecordsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseArticleFeed[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSize {
            get {
                return this.TotalSizeField;
            }
            set {
                if ((this.TotalSizeField.Equals(value) != true)) {
                    this.TotalSizeField = value;
                    this.RaisePropertyChanged("TotalSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfAttachmentFeedR4Aesgjl", Namespace="http://schemas.datacontract.org/2004/07/Salesforce.Common.Models.Json")]
    [System.SerializableAttribute()]
    public partial class QueryResultOfAttachmentFeedR4Aesgjl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextRecordsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.AttachmentFeed[] RecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextRecordsUrl {
            get {
                return this.NextRecordsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRecordsUrlField, value) != true)) {
                    this.NextRecordsUrlField = value;
                    this.RaisePropertyChanged("NextRecordsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.AttachmentFeed[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSize {
            get {
                return this.TotalSizeField;
            }
            set {
                if ((this.TotalSizeField.Equals(value) != true)) {
                    this.TotalSizeField = value;
                    this.RaisePropertyChanged("TotalSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfCaseCommentFeedR4Aesgjl", Namespace="http://schemas.datacontract.org/2004/07/Salesforce.Common.Models.Json")]
    [System.SerializableAttribute()]
    public partial class QueryResultOfCaseCommentFeedR4Aesgjl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextRecordsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseCommentFeed[] RecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextRecordsUrl {
            get {
                return this.NextRecordsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRecordsUrlField, value) != true)) {
                    this.NextRecordsUrlField = value;
                    this.RaisePropertyChanged("NextRecordsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseCommentFeed[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSize {
            get {
                return this.TotalSizeField;
            }
            set {
                if ((this.TotalSizeField.Equals(value) != true)) {
                    this.TotalSizeField = value;
                    this.RaisePropertyChanged("TotalSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryResultOfEmailMessageFeedR4Aesgjl", Namespace="http://schemas.datacontract.org/2004/07/Salesforce.Common.Models.Json")]
    [System.SerializableAttribute()]
    public partial class QueryResultOfEmailMessageFeedR4Aesgjl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NextRecordsUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.EmailMessageFeed[] RecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Done {
            get {
                return this.DoneField;
            }
            set {
                if ((this.DoneField.Equals(value) != true)) {
                    this.DoneField = value;
                    this.RaisePropertyChanged("Done");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextRecordsUrl {
            get {
                return this.NextRecordsUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.NextRecordsUrlField, value) != true)) {
                    this.NextRecordsUrlField = value;
                    this.RaisePropertyChanged("NextRecordsUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.EmailMessageFeed[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSize {
            get {
                return this.TotalSizeField;
            }
            set {
                if ((this.TotalSizeField.Equals(value) != true)) {
                    this.TotalSizeField = value;
                    this.RaisePropertyChanged("TotalSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordType", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class RecordType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseArticleFeed", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CaseArticleFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticle KnowledgeArticleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticle KnowledgeArticle {
            get {
                return this.KnowledgeArticleField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleField, value) != true)) {
                    this.KnowledgeArticleField = value;
                    this.RaisePropertyChanged("KnowledgeArticle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KnowledgeArticle", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class KnowledgeArticle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentFeed", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class AttachmentFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseCommentFeed", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CaseCommentFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentBody {
            get {
                return this.CommentBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentBodyField, value) != true)) {
                    this.CommentBodyField = value;
                    this.RaisePropertyChanged("CommentBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailMessageFeed", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class EmailMessageFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDate {
            get {
                return this.MessageDateField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDateField, value) != true)) {
                    this.MessageDateField = value;
                    this.RaisePropertyChanged("MessageDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseSearchArgs", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CaseSearchArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AccountNosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdfsGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AccountNos {
            get {
                return this.AccountNosField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNosField, value) != true)) {
                    this.AccountNosField = value;
                    this.RaisePropertyChanged("AccountNos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdfsGuid {
            get {
                return this.AdfsGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.AdfsGuidField, value) != true)) {
                    this.AdfsGuidField = value;
                    this.RaisePropertyChanged("AdfsGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchString {
            get {
                return this.SearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchStringField, value) != true)) {
                    this.SearchStringField = value;
                    this.RaisePropertyChanged("SearchString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseSearchResponse", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CaseSearchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountCluster__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillAccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ClosedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCaseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountCluster__c {
            get {
                return this.AccountCluster__cField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountCluster__cField, value) != true)) {
                    this.AccountCluster__cField = value;
                    this.RaisePropertyChanged("AccountCluster__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillAccountNo {
            get {
                return this.CadebillAccountNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillAccountNoField, value) != true)) {
                    this.CadebillAccountNoField = value;
                    this.RaisePropertyChanged("CadebillAccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaseNumber {
            get {
                return this.CaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CaseNumberField, value) != true)) {
                    this.CaseNumberField = value;
                    this.RaisePropertyChanged("CaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.ClosedDateField;
            }
            set {
                if ((this.ClosedDateField.Equals(value) != true)) {
                    this.ClosedDateField = value;
                    this.RaisePropertyChanged("ClosedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactFirstName {
            get {
                return this.ContactFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactFirstNameField, value) != true)) {
                    this.ContactFirstNameField = value;
                    this.RaisePropertyChanged("ContactFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactLastName {
            get {
                return this.ContactLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactLastNameField, value) != true)) {
                    this.ContactLastNameField = value;
                    this.RaisePropertyChanged("ContactLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCaseNumber {
            get {
                return this.ParentCaseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCaseNumberField, value) != true)) {
                    this.ParentCaseNumberField = value;
                    this.RaisePropertyChanged("ParentCaseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderSearchArgs", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class OrderSearchArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountNo {
            get {
                return this.AccountNoField;
            }
            set {
                if ((this.AccountNoField.Equals(value) != true)) {
                    this.AccountNoField = value;
                    this.RaisePropertyChanged("AccountNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Limit {
            get {
                return this.LimitField;
            }
            set {
                if ((this.LimitField.Equals(value) != true)) {
                    this.LimitField = value;
                    this.RaisePropertyChanged("Limit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Offset {
            get {
                return this.OffsetField;
            }
            set {
                if ((this.OffsetField.Equals(value) != true)) {
                    this.OffsetField = value;
                    this.RaisePropertyChanged("Offset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchString {
            get {
                return this.SearchStringField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchStringField, value) != true)) {
                    this.SearchStringField = value;
                    this.RaisePropertyChanged("SearchString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sort {
            get {
                return this.SortField;
            }
            set {
                if ((object.ReferenceEquals(this.SortField, value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderSearchResponse", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class OrderSearchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Technical", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Technical : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cause__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KnowledgeArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Resolution__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause__c {
            get {
                return this.Cause__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Cause__cField, value) != true)) {
                    this.Cause__cField = value;
                    this.RaisePropertyChanged("Cause__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelections {
            get {
                return this.DataCategorySelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategorySelectionsField, value) != true)) {
                    this.DataCategorySelectionsField = value;
                    this.RaisePropertyChanged("DataCategorySelections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KnowledgeArticleId {
            get {
                return this.KnowledgeArticleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleIdField, value) != true)) {
                    this.KnowledgeArticleIdField = value;
                    this.RaisePropertyChanged("KnowledgeArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes__c {
            get {
                return this.Notes__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Notes__cField, value) != true)) {
                    this.Notes__cField = value;
                    this.RaisePropertyChanged("Notes__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Resolution__c {
            get {
                return this.Resolution__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Resolution__cField, value) != true)) {
                    this.Resolution__cField = value;
                    this.RaisePropertyChanged("Resolution__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="General", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class General : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Details__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KnowledgeArticleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Notes__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QueryResultOfDataCategorySelectionR4Aesgjl DataCategorySelections {
            get {
                return this.DataCategorySelectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataCategorySelectionsField, value) != true)) {
                    this.DataCategorySelectionsField = value;
                    this.RaisePropertyChanged("DataCategorySelections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details__c {
            get {
                return this.Details__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Details__cField, value) != true)) {
                    this.Details__cField = value;
                    this.RaisePropertyChanged("Details__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KnowledgeArticleId {
            get {
                return this.KnowledgeArticleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.KnowledgeArticleIdField, value) != true)) {
                    this.KnowledgeArticleIdField = value;
                    this.RaisePropertyChanged("KnowledgeArticleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedDate {
            get {
                return this.LastModifiedDateField;
            }
            set {
                if ((this.LastModifiedDateField.Equals(value) != true)) {
                    this.LastModifiedDateField = value;
                    this.RaisePropertyChanged("LastModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes__c {
            get {
                return this.Notes__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Notes__cField, value) != true)) {
                    this.Notes__cField = value;
                    this.RaisePropertyChanged("Notes__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Idea", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Idea : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommunityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommunityId {
            get {
                return this.CommunityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CommunityIdField, value) != true)) {
                    this.CommunityIdField = value;
                    this.RaisePropertyChanged("CommunityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArticleSearchResponse", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class ArticleSearchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.ResponseAttributes attributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string snippetTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string snippettextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumberField, value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleType {
            get {
                return this.ArticleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleTypeField, value) != true)) {
                    this.ArticleTypeField = value;
                    this.RaisePropertyChanged("ArticleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.ResponseAttributes attributes {
            get {
                return this.attributesField;
            }
            set {
                if ((object.ReferenceEquals(this.attributesField, value) != true)) {
                    this.attributesField = value;
                    this.RaisePropertyChanged("attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string snippetTitle {
            get {
                return this.snippetTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.snippetTitleField, value) != true)) {
                    this.snippetTitleField = value;
                    this.RaisePropertyChanged("snippetTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string snippettext {
            get {
                return this.snippettextField;
            }
            set {
                if ((object.ReferenceEquals(this.snippettextField, value) != true)) {
                    this.snippettextField = value;
                    this.RaisePropertyChanged("snippettext");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseAttributes", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class ResponseAttributes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentType {
            get {
                return this.ContentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentTypeField, value) != true)) {
                    this.ContentTypeField = value;
                    this.RaisePropertyChanged("ContentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountContactRoles", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class AccountContactRoles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CadebillAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ContactRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IntacctAccountNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CadebillAccountNumber {
            get {
                return this.CadebillAccountNumberField;
            }
            set {
                if ((this.CadebillAccountNumberField.Equals(value) != true)) {
                    this.CadebillAccountNumberField = value;
                    this.RaisePropertyChanged("CadebillAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ContactRoles {
            get {
                return this.ContactRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactRolesField, value) != true)) {
                    this.ContactRolesField = value;
                    this.RaisePropertyChanged("ContactRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IntacctAccountNumber {
            get {
                return this.IntacctAccountNumberField;
            }
            set {
                if ((this.IntacctAccountNumberField.Equals(value) != true)) {
                    this.IntacctAccountNumberField = value;
                    this.RaisePropertyChanged("IntacctAccountNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceSiteArticleFeedback", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class ServiceSiteArticleFeedback : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleID__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleNumber__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArticleURL__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachedToCase__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Comment__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contact__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WasArticleHelpful__cField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleID__c {
            get {
                return this.ArticleID__cField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleID__cField, value) != true)) {
                    this.ArticleID__cField = value;
                    this.RaisePropertyChanged("ArticleID__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleNumber__c {
            get {
                return this.ArticleNumber__cField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleNumber__cField, value) != true)) {
                    this.ArticleNumber__cField = value;
                    this.RaisePropertyChanged("ArticleNumber__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ArticleURL__c {
            get {
                return this.ArticleURL__cField;
            }
            set {
                if ((object.ReferenceEquals(this.ArticleURL__cField, value) != true)) {
                    this.ArticleURL__cField = value;
                    this.RaisePropertyChanged("ArticleURL__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttachedToCase__c {
            get {
                return this.AttachedToCase__cField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachedToCase__cField, value) != true)) {
                    this.AttachedToCase__cField = value;
                    this.RaisePropertyChanged("AttachedToCase__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment__c {
            get {
                return this.Comment__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Comment__cField, value) != true)) {
                    this.Comment__cField = value;
                    this.RaisePropertyChanged("Comment__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact__c {
            get {
                return this.Contact__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Contact__cField, value) != true)) {
                    this.Contact__cField = value;
                    this.RaisePropertyChanged("Contact__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WasArticleHelpful__c {
            get {
                return this.WasArticleHelpful__cField;
            }
            set {
                if ((object.ReferenceEquals(this.WasArticleHelpful__cField, value) != true)) {
                    this.WasArticleHelpful__cField = value;
                    this.RaisePropertyChanged("WasArticleHelpful__c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SidebarLink", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class SidebarLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LinkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] OldKeysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowInSidebarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LinkOrder {
            get {
                return this.LinkOrderField;
            }
            set {
                if ((this.LinkOrderField.Equals(value) != true)) {
                    this.LinkOrderField = value;
                    this.RaisePropertyChanged("LinkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] OldKeys {
            get {
                return this.OldKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.OldKeysField, value) != true)) {
                    this.OldKeysField = value;
                    this.RaisePropertyChanged("OldKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowInSidebar {
            get {
                return this.ShowInSidebarField;
            }
            set {
                if ((this.ShowInSidebarField.Equals(value) != true)) {
                    this.ShowInSidebarField = value;
                    this.RaisePropertyChanged("ShowInSidebar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CaseComment", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CaseComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentBody {
            get {
                return this.CommentBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentBodyField, value) != true)) {
                    this.CommentBodyField = value;
                    this.RaisePropertyChanged("CommentBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublished {
            get {
                return this.IsPublishedField;
            }
            set {
                if ((this.IsPublishedField.Equals(value) != true)) {
                    this.IsPublishedField = value;
                    this.RaisePropertyChanged("IsPublished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIdField, value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecentOrder", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.CSO")]
    [System.SerializableAttribute()]
    public partial class RecentOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.SubqueryRecord ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OrderDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.SubqueryRecord Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OrderDateTime {
            get {
                return this.OrderDateTimeField;
            }
            set {
                if ((this.OrderDateTimeField.Equals(value) != true)) {
                    this.OrderDateTimeField = value;
                    this.RaisePropertyChanged("OrderDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderStatusField, value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubqueryRecord", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class SubqueryRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerOrderHistoryItem", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CustomerOrderHistoryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewValue {
            get {
                return this.NewValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NewValueField, value) != true)) {
                    this.NewValueField = value;
                    this.RaisePropertyChanged("NewValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerOrderID", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class CustomerOrderID : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIdField, value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LineItemUpdate", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.CSO")]
    [System.SerializableAttribute()]
    public partial class LineItemUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderErrorDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderLineItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemStatus {
            get {
                return this.ItemStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemStatusField, value) != true)) {
                    this.ItemStatusField = value;
                    this.RaisePropertyChanged("ItemStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemValue {
            get {
                return this.ItemValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemValueField, value) != true)) {
                    this.ItemValueField = value;
                    this.RaisePropertyChanged("ItemValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderErrorDetail {
            get {
                return this.OrderErrorDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderErrorDetailField, value) != true)) {
                    this.OrderErrorDetailField = value;
                    this.RaisePropertyChanged("OrderErrorDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderLineItemId {
            get {
                return this.OrderLineItemIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderLineItemIdField, value) != true)) {
                    this.OrderLineItemIdField = value;
                    this.RaisePropertyChanged("OrderLineItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificItem {
            get {
                return this.SpecificItemField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificItemField, value) != true)) {
                    this.SpecificItemField = value;
                    this.RaisePropertyChanged("SpecificItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SortDirection", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.AccountSearch")]
    public enum SortDirection : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ascending = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Descending = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSortColumn", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.AccountSearch")]
    public enum AccountSortColumn : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountNumber = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountType = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountRecordType", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.AccountSearch")]
    public enum AccountRecordType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Customers = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WFOPremiseCustomer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResellCustomers = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResellPartner = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MasterAgents = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InCloudDevelopmentPartner = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WFOPremisePartner = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SubAgents = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Partners = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountSearchResult", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.AccountSearch")]
    [System.SerializableAttribute()]
    public partial class AccountSearchResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] MatchingAccountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalSearchResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] MatchingAccounts {
            get {
                return this.MatchingAccountsField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchingAccountsField, value) != true)) {
                    this.MatchingAccountsField = value;
                    this.RaisePropertyChanged("MatchingAccounts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalSearchResults {
            get {
                return this.TotalSearchResultsField;
            }
            set {
                if ((this.TotalSearchResultsField.Equals(value) != true)) {
                    this.TotalSearchResultsField = value;
                    this.RaisePropertyChanged("TotalSearchResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectData", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.IS_Reports")]
    [System.SerializableAttribute()]
    public partial class ProjectData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompletedPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalStoryPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompletedPoints {
            get {
                return this.CompletedPointsField;
            }
            set {
                if ((this.CompletedPointsField.Equals(value) != true)) {
                    this.CompletedPointsField = value;
                    this.RaisePropertyChanged("CompletedPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIdField, value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNumber {
            get {
                return this.ProjectNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNumberField, value) != true)) {
                    this.ProjectNumberField = value;
                    this.RaisePropertyChanged("ProjectNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalStoryPoints {
            get {
                return this.TotalStoryPointsField;
            }
            set {
                if ((this.TotalStoryPointsField.Equals(value) != true)) {
                    this.TotalStoryPointsField = value;
                    this.RaisePropertyChanged("TotalStoryPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountContactRole", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class AccountContactRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CadebillAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntacctAccountNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CadebillAccountNumber {
            get {
                return this.CadebillAccountNumberField;
            }
            set {
                if ((this.CadebillAccountNumberField.Equals(value) != true)) {
                    this.CadebillAccountNumberField = value;
                    this.RaisePropertyChanged("CadebillAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdField, value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactRoles {
            get {
                return this.ContactRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactRolesField, value) != true)) {
                    this.ContactRolesField = value;
                    this.RaisePropertyChanged("ContactRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntacctAccountNumber {
            get {
                return this.IntacctAccountNumberField;
            }
            set {
                if ((this.IntacctAccountNumberField.Equals(value) != true)) {
                    this.IntacctAccountNumberField = value;
                    this.RaisePropertyChanged("IntacctAccountNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.Enums")]
    public enum AccountType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SaaS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Premise = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerCaseIncidentUpdateRequest", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class PartnerCaseIncidentUpdateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TroubleReportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TroubleReportStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TroubleReportStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TroubleReportId {
            get {
                return this.TroubleReportIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TroubleReportIdField, value) != true)) {
                    this.TroubleReportIdField = value;
                    this.RaisePropertyChanged("TroubleReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TroubleReportState {
            get {
                return this.TroubleReportStateField;
            }
            set {
                if ((object.ReferenceEquals(this.TroubleReportStateField, value) != true)) {
                    this.TroubleReportStateField = value;
                    this.RaisePropertyChanged("TroubleReportState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TroubleReportStatus {
            get {
                return this.TroubleReportStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.TroubleReportStatusField, value) != true)) {
                    this.TroubleReportStatusField = value;
                    this.RaisePropertyChanged("TroubleReportStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerCaseIncidentUpdateResponse", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class PartnerCaseIncidentUpdateResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseBody {
            get {
                return this.ResponseBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseBodyField, value) != true)) {
                    this.ResponseBodyField = value;
                    this.RaisePropertyChanged("ResponseBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainBillingContactRoles", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class MainBillingContactRoles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADFSGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADFSGuid {
            get {
                return this.ADFSGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ADFSGuidField, value) != true)) {
                    this.ADFSGuidField = value;
                    this.RaisePropertyChanged("ADFSGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdField, value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactRole {
            get {
                return this.ContactRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactRoleField, value) != true)) {
                    this.ContactRoleField = value;
                    this.RaisePropertyChanged("ContactRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportDocument", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.ContentLibrary")]
    [System.SerializableAttribute()]
    public partial class SupportDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathOnClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupportSiteCategory__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupportSiteSubCategory__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PathOnClient {
            get {
                return this.PathOnClientField;
            }
            set {
                if ((object.ReferenceEquals(this.PathOnClientField, value) != true)) {
                    this.PathOnClientField = value;
                    this.RaisePropertyChanged("PathOnClient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportSiteCategory__c {
            get {
                return this.SupportSiteCategory__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportSiteCategory__cField, value) != true)) {
                    this.SupportSiteCategory__cField = value;
                    this.RaisePropertyChanged("SupportSiteCategory__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupportSiteSubCategory__c {
            get {
                return this.SupportSiteSubCategory__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportSiteSubCategory__cField, value) != true)) {
                    this.SupportSiteSubCategory__cField = value;
                    this.RaisePropertyChanged("SupportSiteSubCategory__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesforceUser", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class SalesforceUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdfsGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailEncodingKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FederationIdentifierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageLocaleKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleSidKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Team__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneSidKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserPermissionsSFContentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdfsGuid {
            get {
                return this.AdfsGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.AdfsGuidField, value) != true)) {
                    this.AdfsGuidField = value;
                    this.RaisePropertyChanged("AdfsGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alias {
            get {
                return this.AliasField;
            }
            set {
                if ((object.ReferenceEquals(this.AliasField, value) != true)) {
                    this.AliasField = value;
                    this.RaisePropertyChanged("Alias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactIdField, value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailEncodingKey {
            get {
                return this.EmailEncodingKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailEncodingKeyField, value) != true)) {
                    this.EmailEncodingKeyField = value;
                    this.RaisePropertyChanged("EmailEncodingKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FederationIdentifier {
            get {
                return this.FederationIdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.FederationIdentifierField, value) != true)) {
                    this.FederationIdentifierField = value;
                    this.RaisePropertyChanged("FederationIdentifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LanguageLocaleKey {
            get {
                return this.LanguageLocaleKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageLocaleKeyField, value) != true)) {
                    this.LanguageLocaleKeyField = value;
                    this.RaisePropertyChanged("LanguageLocaleKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseId {
            get {
                return this.LicenseIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseIdField, value) != true)) {
                    this.LicenseIdField = value;
                    this.RaisePropertyChanged("LicenseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocaleSidKey {
            get {
                return this.LocaleSidKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleSidKeyField, value) != true)) {
                    this.LocaleSidKeyField = value;
                    this.RaisePropertyChanged("LocaleSidKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileId {
            get {
                return this.ProfileIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileIdField, value) != true)) {
                    this.ProfileIdField = value;
                    this.RaisePropertyChanged("ProfileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Team__c {
            get {
                return this.Team__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Team__cField, value) != true)) {
                    this.Team__cField = value;
                    this.RaisePropertyChanged("Team__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZoneSidKey {
            get {
                return this.TimeZoneSidKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneSidKeyField, value) != true)) {
                    this.TimeZoneSidKeyField = value;
                    this.RaisePropertyChanged("TimeZoneSidKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserPermissionsSFContentUser {
            get {
                return this.UserPermissionsSFContentUserField;
            }
            set {
                if ((this.UserPermissionsSFContentUserField.Equals(value) != true)) {
                    this.UserPermissionsSFContentUserField = value;
                    this.RaisePropertyChanged("UserPermissionsSFContentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRoleId {
            get {
                return this.UserRoleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRoleIdField, value) != true)) {
                    this.UserRoleIdField = value;
                    this.RaisePropertyChanged("UserRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactPermissions", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class ContactPermissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ExcludedFromAutoPermissionSetAssignmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludedFromAutoPermissionSetAssignment {
            get {
                return this.ExcludedFromAutoPermissionSetAssignmentField;
            }
            set {
                if ((this.ExcludedFromAutoPermissionSetAssignmentField.Equals(value) != true)) {
                    this.ExcludedFromAutoPermissionSetAssignmentField = value;
                    this.RaisePropertyChanged("ExcludedFromAutoPermissionSetAssignment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserUpsertResponse", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class UserUpsertResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountContactRoleUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContactUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermissionSetsUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UserUpdatedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountContactRoleUpdate {
            get {
                return this.AccountContactRoleUpdateField;
            }
            set {
                if ((this.AccountContactRoleUpdateField.Equals(value) != true)) {
                    this.AccountContactRoleUpdateField = value;
                    this.RaisePropertyChanged("AccountContactRoleUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContactUpdated {
            get {
                return this.ContactUpdatedField;
            }
            set {
                if ((this.ContactUpdatedField.Equals(value) != true)) {
                    this.ContactUpdatedField = value;
                    this.RaisePropertyChanged("ContactUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermissionSetsUpdated {
            get {
                return this.PermissionSetsUpdatedField;
            }
            set {
                if ((this.PermissionSetsUpdatedField.Equals(value) != true)) {
                    this.PermissionSetsUpdatedField = value;
                    this.RaisePropertyChanged("PermissionSetsUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UserUpdated {
            get {
                return this.UserUpdatedField;
            }
            set {
                if ((this.UserUpdatedField.Equals(value) != true)) {
                    this.UserUpdatedField = value;
                    this.RaisePropertyChanged("UserUpdated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permissions", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class Permissions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LabelField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired {
            get {
                return this.IsRequiredField;
            }
            set {
                if ((this.IsRequiredField.Equals(value) != true)) {
                    this.IsRequiredField = value;
                    this.RaisePropertyChanged("IsRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label {
            get {
                return this.LabelField;
            }
            set {
                if ((object.ReferenceEquals(this.LabelField, value) != true)) {
                    this.LabelField = value;
                    this.RaisePropertyChanged("Label");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserClaimType", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    public enum UserClaimType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProfileName = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProfileId = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountName = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountId = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcludedFromAutoPermissionSetAssignment = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VisibilityToAllLeads = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserLicenseName = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactId = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactFirstName = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactLastName = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountContactRole = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserClaimResponse", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class UserClaimResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PermissionSetIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimType, string> UserClaimsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PermissionSetIds {
            get {
                return this.PermissionSetIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionSetIdsField, value) != true)) {
                    this.PermissionSetIdsField = value;
                    this.RaisePropertyChanged("PermissionSetIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimType, string> UserClaims {
            get {
                return this.UserClaimsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserClaimsField, value) != true)) {
                    this.UserClaimsField = value;
                    this.RaisePropertyChanged("UserClaims");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountUser", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class AccountUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADFSGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADFSGuid {
            get {
                return this.ADFSGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.ADFSGuidField, value) != true)) {
                    this.ADFSGuidField = value;
                    this.RaisePropertyChanged("ADFSGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRolePortalRole", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.Enums")]
    public enum UserRolePortalRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Executive = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Worker = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRolePortalType", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.Enums")]
    public enum UserRolePortalType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Partner = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartnerRegistration", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class PartnerRegistration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditinalInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonthlyLoginFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditinalInformation {
            get {
                return this.AdditinalInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditinalInformationField, value) != true)) {
                    this.AdditinalInformationField = value;
                    this.RaisePropertyChanged("AdditinalInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterAgent {
            get {
                return this.MasterAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterAgentField, value) != true)) {
                    this.MasterAgentField = value;
                    this.RaisePropertyChanged("MasterAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MonthlyLoginFrequency {
            get {
                return this.MonthlyLoginFrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthlyLoginFrequencyField, value) != true)) {
                    this.MonthlyLoginFrequencyField = value;
                    this.RaisePropertyChanged("MonthlyLoginFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerType {
            get {
                return this.PartnerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerTypeField, value) != true)) {
                    this.PartnerTypeField = value;
                    this.RaisePropertyChanged("PartnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetail", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceUserServi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class UserDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdfsGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleInitialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalesforceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdfsGuid {
            get {
                return this.AdfsGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.AdfsGuidField, value) != true)) {
                    this.AdfsGuidField = value;
                    this.RaisePropertyChanged("AdfsGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleInitial {
            get {
                return this.MiddleInitialField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleInitialField, value) != true)) {
                    this.MiddleInitialField = value;
                    this.RaisePropertyChanged("MiddleInitial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesforceId {
            get {
                return this.SalesforceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesforceIdField, value) != true)) {
                    this.SalesforceIdField = value;
                    this.RaisePropertyChanged("SalesforceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationTimeZone", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceNotificat" +
        "ionService")]
    [System.SerializableAttribute()]
    public partial class NotificationTimeZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimezoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Timezone {
            get {
                return this.TimezoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimezoneField, value) != true)) {
                    this.TimezoneField = value;
                    this.RaisePropertyChanged("Timezone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationContact", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.SalesforceNotificat" +
        "ionService")]
    [System.SerializableAttribute()]
    public partial class NotificationContact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AccountRootParentIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdfsGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeactivatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMPersonGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMPersonIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMPersonNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNumberField, value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] AccountRootParentIDs {
            get {
                return this.AccountRootParentIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountRootParentIDsField, value) != true)) {
                    this.AccountRootParentIDsField = value;
                    this.RaisePropertyChanged("AccountRootParentIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdfsGuid {
            get {
                return this.AdfsGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.AdfsGuidField, value) != true)) {
                    this.AdfsGuidField = value;
                    this.RaisePropertyChanged("AdfsGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactRole {
            get {
                return this.ContactRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactRoleField, value) != true)) {
                    this.ContactRoleField = value;
                    this.RaisePropertyChanged("ContactRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deactivated {
            get {
                return this.DeactivatedField;
            }
            set {
                if ((this.DeactivatedField.Equals(value) != true)) {
                    this.DeactivatedField = value;
                    this.RaisePropertyChanged("Deactivated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerContactId {
            get {
                return this.PartnerContactIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerContactIdField, value) != true)) {
                    this.PartnerContactIdField = value;
                    this.RaisePropertyChanged("PartnerContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMPersonGuid {
            get {
                return this.XMPersonGuidField;
            }
            set {
                if ((object.ReferenceEquals(this.XMPersonGuidField, value) != true)) {
                    this.XMPersonGuidField = value;
                    this.RaisePropertyChanged("XMPersonGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMPersonId {
            get {
                return this.XMPersonIdField;
            }
            set {
                if ((object.ReferenceEquals(this.XMPersonIdField, value) != true)) {
                    this.XMPersonIdField = value;
                    this.RaisePropertyChanged("XMPersonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMPersonName {
            get {
                return this.XMPersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.XMPersonNameField, value) != true)) {
                    this.XMPersonNameField = value;
                    this.RaisePropertyChanged("XMPersonName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationGroupStatus", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.XMattersIntegration" +
        "Service")]
    public enum NotificationGroupStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XMUserDetails", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.XMattersIntegration" +
        "Service")]
    [System.SerializableAttribute()]
    public partial class XMUserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClusterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClusterPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartnerPrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmattersGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ManageMyNotificationsBusinessLayer.inContactSalesforceService.CadeBillAccount[] accountsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cluster {
            get {
                return this.ClusterField;
            }
            set {
                if ((object.ReferenceEquals(this.ClusterField, value) != true)) {
                    this.ClusterField = value;
                    this.RaisePropertyChanged("Cluster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClusterPrefix {
            get {
                return this.ClusterPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.ClusterPrefixField, value) != true)) {
                    this.ClusterPrefixField = value;
                    this.RaisePropertyChanged("ClusterPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartnerPrefix {
            get {
                return this.PartnerPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PartnerPrefixField, value) != true)) {
                    this.PartnerPrefixField = value;
                    this.RaisePropertyChanged("PartnerPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmattersGroupName {
            get {
                return this.XmattersGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.XmattersGroupNameField, value) != true)) {
                    this.XmattersGroupNameField = value;
                    this.RaisePropertyChanged("XmattersGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CadeBillAccount[] accounts {
            get {
                return this.accountsField;
            }
            set {
                if ((object.ReferenceEquals(this.accountsField, value) != true)) {
                    this.accountsField = value;
                    this.RaisePropertyChanged("accounts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XMAuditType", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.XMattersIntegration" +
        "Service")]
    [System.SerializableAttribute()]
    public partial class XMAuditType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CadeBillAccount", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.XMattersIntegration" +
        "Service")]
    [System.SerializableAttribute()]
    public partial class CadeBillAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillAccountNo__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillAccountNo__c {
            get {
                return this.CadebillAccountNo__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillAccountNo__cField, value) != true)) {
                    this.CadebillAccountNo__cField = value;
                    this.RaisePropertyChanged("CadebillAccountNo__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XMAudit", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain.XMattersIntegration" +
        "Service")]
    [System.SerializableAttribute()]
    public partial class XMAudit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADFSGuid__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Audit_Type__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Change_Source__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Event_Change_Details__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Event_Date__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string User__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string xmPerson__cField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADFSGuid__c {
            get {
                return this.ADFSGuid__cField;
            }
            set {
                if ((object.ReferenceEquals(this.ADFSGuid__cField, value) != true)) {
                    this.ADFSGuid__cField = value;
                    this.RaisePropertyChanged("ADFSGuid__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Audit_Type__c {
            get {
                return this.Audit_Type__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Audit_Type__cField, value) != true)) {
                    this.Audit_Type__cField = value;
                    this.RaisePropertyChanged("Audit_Type__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Change_Source__c {
            get {
                return this.Change_Source__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Change_Source__cField, value) != true)) {
                    this.Change_Source__cField = value;
                    this.RaisePropertyChanged("Change_Source__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event_Change_Details__c {
            get {
                return this.Event_Change_Details__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Event_Change_Details__cField, value) != true)) {
                    this.Event_Change_Details__cField = value;
                    this.RaisePropertyChanged("Event_Change_Details__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Event_Date__c {
            get {
                return this.Event_Date__cField;
            }
            set {
                if ((this.Event_Date__cField.Equals(value) != true)) {
                    this.Event_Date__cField = value;
                    this.RaisePropertyChanged("Event_Date__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User__c {
            get {
                return this.User__cField;
            }
            set {
                if ((object.ReferenceEquals(this.User__cField, value) != true)) {
                    this.User__cField = value;
                    this.RaisePropertyChanged("User__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string xmPerson__c {
            get {
                return this.xmPerson__cField;
            }
            set {
                if ((object.ReferenceEquals(this.xmPerson__cField, value) != true)) {
                    this.xmPerson__cField = value;
                    this.RaisePropertyChanged("xmPerson__c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Opportunity", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Opportunity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillNo__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpportunityNumber__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__PrimaryQuote__cField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillNo__c {
            get {
                return this.CadebillNo__cField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillNo__cField, value) != true)) {
                    this.CadebillNo__cField = value;
                    this.RaisePropertyChanged("CadebillNo__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpportunityNumber__c {
            get {
                return this.OpportunityNumber__cField;
            }
            set {
                if ((object.ReferenceEquals(this.OpportunityNumber__cField, value) != true)) {
                    this.OpportunityNumber__cField = value;
                    this.RaisePropertyChanged("OpportunityNumber__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__PrimaryQuote__c {
            get {
                return this.SBQQ__PrimaryQuote__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__PrimaryQuote__cField, value) != true)) {
                    this.SBQQ__PrimaryQuote__cField = value;
                    this.RaisePropertyChanged("SBQQ__PrimaryQuote__c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quote", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class Quote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Number_of_Quote_Lines__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Quote_Name__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__PaymentTerms__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__QuoteTemplateId__cField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number_of_Quote_Lines__c {
            get {
                return this.Number_of_Quote_Lines__cField;
            }
            set {
                if ((this.Number_of_Quote_Lines__cField.Equals(value) != true)) {
                    this.Number_of_Quote_Lines__cField = value;
                    this.RaisePropertyChanged("Number_of_Quote_Lines__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quote_Name__c {
            get {
                return this.Quote_Name__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Quote_Name__cField, value) != true)) {
                    this.Quote_Name__cField = value;
                    this.RaisePropertyChanged("Quote_Name__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__PaymentTerms__c {
            get {
                return this.SBQQ__PaymentTerms__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__PaymentTerms__cField, value) != true)) {
                    this.SBQQ__PaymentTerms__cField = value;
                    this.RaisePropertyChanged("SBQQ__PaymentTerms__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__QuoteTemplateId__c {
            get {
                return this.SBQQ__QuoteTemplateId__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__QuoteTemplateId__cField, value) != true)) {
                    this.SBQQ__QuoteTemplateId__cField = value;
                    this.RaisePropertyChanged("SBQQ__QuoteTemplateId__c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuoteLine", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class QuoteLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyIsoCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Customer_Net_Unit_Price__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Record_Type_of_Quote__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__EffectiveQuantity__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__ProductCode__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__ProductFamily__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__ProductName__cField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SBQQ__Quantity__cField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyIsoCode {
            get {
                return this.CurrencyIsoCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyIsoCodeField, value) != true)) {
                    this.CurrencyIsoCodeField = value;
                    this.RaisePropertyChanged("CurrencyIsoCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer_Net_Unit_Price__c {
            get {
                return this.Customer_Net_Unit_Price__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Customer_Net_Unit_Price__cField, value) != true)) {
                    this.Customer_Net_Unit_Price__cField = value;
                    this.RaisePropertyChanged("Customer_Net_Unit_Price__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Record_Type_of_Quote__c {
            get {
                return this.Record_Type_of_Quote__cField;
            }
            set {
                if ((object.ReferenceEquals(this.Record_Type_of_Quote__cField, value) != true)) {
                    this.Record_Type_of_Quote__cField = value;
                    this.RaisePropertyChanged("Record_Type_of_Quote__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__EffectiveQuantity__c {
            get {
                return this.SBQQ__EffectiveQuantity__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__EffectiveQuantity__cField, value) != true)) {
                    this.SBQQ__EffectiveQuantity__cField = value;
                    this.RaisePropertyChanged("SBQQ__EffectiveQuantity__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__ProductCode__c {
            get {
                return this.SBQQ__ProductCode__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__ProductCode__cField, value) != true)) {
                    this.SBQQ__ProductCode__cField = value;
                    this.RaisePropertyChanged("SBQQ__ProductCode__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__ProductFamily__c {
            get {
                return this.SBQQ__ProductFamily__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__ProductFamily__cField, value) != true)) {
                    this.SBQQ__ProductFamily__cField = value;
                    this.RaisePropertyChanged("SBQQ__ProductFamily__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__ProductName__c {
            get {
                return this.SBQQ__ProductName__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__ProductName__cField, value) != true)) {
                    this.SBQQ__ProductName__cField = value;
                    this.RaisePropertyChanged("SBQQ__ProductName__c");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SBQQ__Quantity__c {
            get {
                return this.SBQQ__Quantity__cField;
            }
            set {
                if ((object.ReferenceEquals(this.SBQQ__Quantity__cField, value) != true)) {
                    this.SBQQ__Quantity__cField = value;
                    this.RaisePropertyChanged("SBQQ__Quantity__c");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductGoLive", Namespace="http://schemas.datacontract.org/2004/07/InContact.Sfdc.Domain")]
    [System.SerializableAttribute()]
    public partial class ProductGoLive : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActualProjectGoLiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CadebillAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ProductCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountName {
            get {
                return this.AccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountNameField, value) != true)) {
                    this.AccountNameField = value;
                    this.RaisePropertyChanged("AccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActualProjectGoLiveDate {
            get {
                return this.ActualProjectGoLiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ActualProjectGoLiveDateField, value) != true)) {
                    this.ActualProjectGoLiveDateField = value;
                    this.RaisePropertyChanged("ActualProjectGoLiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CadebillAccountNumber {
            get {
                return this.CadebillAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CadebillAccountNumberField, value) != true)) {
                    this.CadebillAccountNumberField = value;
                    this.RaisePropertyChanged("CadebillAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ProductCode {
            get {
                return this.ProductCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductCodeField, value) != true)) {
                    this.ProductCodeField = value;
                    this.RaisePropertyChanged("ProductCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.ISalesforceService")]
    public interface ISalesforceService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/InsertCustomerOrder", ReplyAction="http://tempuri.org/ISalesforceService/InsertCustomerOrderResponse")]
        string InsertCustomerOrder(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder orderToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/InsertCustomerOrder", ReplyAction="http://tempuri.org/ISalesforceService/InsertCustomerOrderResponse")]
        System.Threading.Tasks.Task<string> InsertCustomerOrderAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder orderToInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetQ_AArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetQ_AArticleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Q_A GetQ_AArticle(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetQ_AArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetQ_AArticleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Q_A> GetQ_AArticleAsync(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetSolutionArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetSolutionArticleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Solution GetSolutionArticle(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetSolutionArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetSolutionArticleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Solution> GetSolutionArticleAsync(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetHowToArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetHowToArticleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.HowTo GetHowToArticle(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetHowToArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetHowToArticleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.HowTo> GetHowToArticleAsync(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleNumberByTitle", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleNumberByTitleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion GetArticleNumberByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleNumberByTitle", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleNumberByTitleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion> GetArticleNumberByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleSummariesByArticleNumbers", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleSummariesByArticleNumbersResponse" +
            "")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion[] GetArticleSummariesByArticleNumbers(string[] articleNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleSummariesByArticleNumbers", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleSummariesByArticleNumbersResponse" +
            "")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion[]> GetArticleSummariesByArticleNumbersAsync(string[] articleNumbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleImageByIds", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleImageByIdsResponse")]
        byte[] GetArticleImageByIds(string eid, string feoid, string refid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleImageByIds", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleImageByIdsResponse")]
        System.Threading.Tasks.Task<byte[]> GetArticleImageByIdsAsync(string eid, string feoid, string refid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateCaseArticle", ReplyAction="http://tempuri.org/ISalesforceService/CreateCaseArticleResponse")]
        void CreateCaseArticle(string caseId, string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateCaseArticle", ReplyAction="http://tempuri.org/ISalesforceService/CreateCaseArticleResponse")]
        System.Threading.Tasks.Task CreateCaseArticleAsync(string caseId, string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCase", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCaseResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase GetPartnerCase(string caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCase", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCaseResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> GetPartnerCaseAsync(string caseId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOpenPartnerCases", ReplyAction="http://tempuri.org/ISalesforceService/GetOpenPartnerCasesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[] GetOpenPartnerCases(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOpenPartnerCases", ReplyAction="http://tempuri.org/ISalesforceService/GetOpenPartnerCasesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[]> GetOpenPartnerCasesAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCaseData", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCaseDataResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[] GetPartnerCaseData(string[] caseIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCaseData", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCaseDataResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[]> GetPartnerCaseDataAsync(string[] caseIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseFeeds", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseFeedsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseDetail GetCaseFeeds(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseFeeds", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseFeedsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseDetail> GetCaseFeedsAsync(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SearchCases", ReplyAction="http://tempuri.org/ISalesforceService/SearchCasesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchResponse[] SearchCases(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SearchCases", ReplyAction="http://tempuri.org/ISalesforceService/SearchCasesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchResponse[]> SearchCasesAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseList", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseListResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] GetCaseList(string[] caseNos, string rqType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseList", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseListResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[]> GetCaseListAsync(string[] caseNos, string rqType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseListByRecordTypeAndReason", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseListByRecordTypeAndReasonResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] GetCaseListByRecordTypeAndReason(string[] caseNos, string rqType, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseListByRecordTypeAndReason", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseListByRecordTypeAndReasonResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[]> GetCaseListByRecordTypeAndReasonAsync(string[] caseNos, string rqType, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SearchOrders", ReplyAction="http://tempuri.org/ISalesforceService/SearchOrdersResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchResponse[] SearchOrders(ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SearchOrders", ReplyAction="http://tempuri.org/ISalesforceService/SearchOrdersResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchResponse[]> SearchOrdersAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchArgs args);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndContact", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndContactRespon" +
            "se")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseGetAccountAndContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndContact", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndContactRespon" +
            "se")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseGetAccountAndContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndParentContact" +
            "", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndParentContact" +
            "Response")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseGetAccountAndParentContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid, int parentAccountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndParentContact" +
            "", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountAndParentContact" +
            "Response")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseGetAccountAndParentContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid, int parentAccountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccount", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseGetAccount(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccount", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseGetAccountResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseGetAccountAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCase", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCase(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCase", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdatePartnerCase", ReplyAction="http://tempuri.org/ISalesforceService/UpdatePartnerCaseResponse")]
        void UpdatePartnerCase(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdatePartnerCase", ReplyAction="http://tempuri.org/ISalesforceService/UpdatePartnerCaseResponse")]
        System.Threading.Tasks.Task UpdatePartnerCaseAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateCaseStatus", ReplyAction="http://tempuri.org/ISalesforceService/UpdateCaseStatusResponse")]
        bool UpdateCaseStatus(string caseId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateCaseStatus", ReplyAction="http://tempuri.org/ISalesforceService/UpdateCaseStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateCaseStatusAsync(string caseId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateCaseCadebillCredit", ReplyAction="http://tempuri.org/ISalesforceService/UpdateCaseCadebillCreditResponse")]
        bool UpdateCaseCadebillCredit(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] cases);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateCaseCadebillCredit", ReplyAction="http://tempuri.org/ISalesforceService/UpdateCaseCadebillCreditResponse")]
        System.Threading.Tasks.Task<bool> UpdateCaseCadebillCreditAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] cases);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateCaseCadebillTaxCredit", ReplyAction="http://tempuri.org/ISalesforceService/UpdateCaseCadebillTaxCreditResponse")]
        System.Collections.Generic.Dictionary<string, bool> UpdateCaseCadebillTaxCredit(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] taxCreditCases);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateCaseCadebillTaxCredit", ReplyAction="http://tempuri.org/ISalesforceService/UpdateCaseCadebillTaxCreditResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, bool>> UpdateCaseCadebillTaxCreditAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] taxCreditCases);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateAccountCreditClass", ReplyAction="http://tempuri.org/ISalesforceService/UpdateAccountCreditClassResponse")]
        bool UpdateAccountCreditClass(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateAccountCreditClass", ReplyAction="http://tempuri.org/ISalesforceService/UpdateAccountCreditClassResponse")]
        System.Threading.Tasks.Task<bool> UpdateAccountCreditClassAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] accounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOpenPartnerCasesWithRequestType", ReplyAction="http://tempuri.org/ISalesforceService/GetOpenPartnerCasesWithRequestTypeResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[] GetOpenPartnerCasesWithRequestType(string accountNo, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOpenPartnerCasesWithRequestType", ReplyAction="http://tempuri.org/ISalesforceService/GetOpenPartnerCasesWithRequestTypeResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[]> GetOpenPartnerCasesWithRequestTypeAsync(string accountNo, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetTechnicalArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetTechnicalArticleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Technical GetTechnicalArticle(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetTechnicalArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetTechnicalArticleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Technical> GetTechnicalArticleAsync(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetGeneralArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetGeneralArticleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.General GetGeneralArticle(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetGeneralArticle", ReplyAction="http://tempuri.org/ISalesforceService/GetGeneralArticleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.General> GetGeneralArticleAsync(string articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticlesFromCaseInformation", ReplyAction="http://tempuri.org/ISalesforceService/GetArticlesFromCaseInformationResponse")]
        string GetArticlesFromCaseInformation(string subject, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticlesFromCaseInformation", ReplyAction="http://tempuri.org/ISalesforceService/GetArticlesFromCaseInformationResponse")]
        System.Threading.Tasks.Task<string> GetArticlesFromCaseInformationAsync(string subject, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerAccount", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerAccountResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetPartnerAccount(int[] accountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerAccount", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerAccountResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetPartnerAccountAsync(int[] accountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerAccounts", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerAccountsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetPartnerAccounts(int[] accountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerAccounts", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerAccountsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetPartnerAccountsAsync(int[] accountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/ListServices", ReplyAction="http://tempuri.org/ISalesforceService/ListServicesResponse")]
        string ListServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/ListServices", ReplyAction="http://tempuri.org/ISalesforceService/ListServicesResponse")]
        System.Threading.Tasks.Task<string> ListServicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleImage", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleImageResponse")]
        byte[] GetArticleImage(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetArticleImage", ReplyAction="http://tempuri.org/ISalesforceService/GetArticleImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetArticleImageAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/PostIdea", ReplyAction="http://tempuri.org/ISalesforceService/PostIdeaResponse")]
        bool PostIdea(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Idea idea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/PostIdea", ReplyAction="http://tempuri.org/ISalesforceService/PostIdeaResponse")]
        System.Threading.Tasks.Task<bool> PostIdeaAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Idea idea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SearchArticles", ReplyAction="http://tempuri.org/ISalesforceService/SearchArticlesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.ArticleSearchResponse[] SearchArticles(string searchString, System.Collections.Generic.Dictionary<string, string> dataCategories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SearchArticles", ReplyAction="http://tempuri.org/ISalesforceService/SearchArticlesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ArticleSearchResponse[]> SearchArticlesAsync(string searchString, System.Collections.Generic.Dictionary<string, string> dataCategories);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetSolutions", ReplyAction="http://tempuri.org/ISalesforceService/GetSolutionsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.General GetSolutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetSolutions", ReplyAction="http://tempuri.org/ISalesforceService/GetSolutionsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.General> GetSolutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateAttachment", ReplyAction="http://tempuri.org/ISalesforceService/CreateAttachmentResponse")]
        string CreateAttachment(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Attachment attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateAttachment", ReplyAction="http://tempuri.org/ISalesforceService/CreateAttachmentResponse")]
        System.Threading.Tasks.Task<string> CreateAttachmentAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Attachment attachment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCaseById", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCaseByIdResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase GetPartnerCaseById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCaseById", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCaseByIdResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> GetPartnerCaseByIdAsync(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseAsRecordTypeId", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseAsRecordTypeIdResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseAsRecordTypeId(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreatePartnerCaseAsRecordTypeId", ReplyAction="http://tempuri.org/ISalesforceService/CreatePartnerCaseAsRecordTypeIdResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseAsRecordTypeIdAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetRecordTypeIdByName", ReplyAction="http://tempuri.org/ISalesforceService/GetRecordTypeIdByNameResponse")]
        string GetRecordTypeIdByName(string recordTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetRecordTypeIdByName", ReplyAction="http://tempuri.org/ISalesforceService/GetRecordTypeIdByNameResponse")]
        System.Threading.Tasks.Task<string> GetRecordTypeIdByNameAsync(string recordTypeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateContact", ReplyAction="http://tempuri.org/ISalesforceService/CreateContactResponse")]
        string CreateContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateContact", ReplyAction="http://tempuri.org/ISalesforceService/CreateContactResponse")]
        System.Threading.Tasks.Task<string> CreateContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseIDByCaseNumber", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseIDByCaseNumberResponse")]
        string GetCaseIDByCaseNumber(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseIDByCaseNumber", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseIDByCaseNumberResponse")]
        System.Threading.Tasks.Task<string> GetCaseIDByCaseNumberAsync(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContact", ReplyAction="http://tempuri.org/ISalesforceService/GetContactResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact GetContact(string adfsGuid, int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContact", ReplyAction="http://tempuri.org/ISalesforceService/GetContactResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact> GetContactAsync(string adfsGuid, int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactByEmail", ReplyAction="http://tempuri.org/ISalesforceService/GetContactByEmailResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact GetContactByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactByEmail", ReplyAction="http://tempuri.org/ISalesforceService/GetContactByEmailResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact> GetContactByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountIDByAccountNo", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountIDByAccountNoResponse")]
        string GetAccountIDByAccountNo(double accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountIDByAccountNo", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountIDByAccountNoResponse")]
        System.Threading.Tasks.Task<string> GetAccountIDByAccountNoAsync(double accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseDetailsByTroubleTktNumber", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseDetailsByTroubleTktNumberResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase GetCaseDetailsByTroubleTktNumber(string troubleTktNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCaseDetailsByTroubleTktNumber", ReplyAction="http://tempuri.org/ISalesforceService/GetCaseDetailsByTroubleTktNumberResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> GetCaseDetailsByTroubleTktNumberAsync(string troubleTktNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactEmailByRole", ReplyAction="http://tempuri.org/ISalesforceService/GetContactEmailByRoleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[] GetContactEmailByRole(string role, int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactEmailByRole", ReplyAction="http://tempuri.org/ISalesforceService/GetContactEmailByRoleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[]> GetContactEmailByRoleAsync(string role, int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountContactsForRole", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountContactsForRoleResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[] GetAccountContactsForRole(string accountNo, string contactEmail, string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountContactsForRole", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountContactsForRoleResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[]> GetAccountContactsForRoleAsync(string accountNo, string contactEmail, string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateContactsByAdfsGuid", ReplyAction="http://tempuri.org/ISalesforceService/UpdateContactsByAdfsGuidResponse")]
        bool UpdateContactsByAdfsGuid(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact, string adfsGuid, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateContactsByAdfsGuid", ReplyAction="http://tempuri.org/ISalesforceService/UpdateContactsByAdfsGuidResponse")]
        System.Threading.Tasks.Task<bool> UpdateContactsByAdfsGuidAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact, string adfsGuid, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountByAccountNo", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountByAccountNoResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetAccountByAccountNo(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountByAccountNo", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountByAccountNoResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetAccountByAccountNoAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountListByAccountNos", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountListByAccountNosResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAccountListByAccountNos(int[] accountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountListByAccountNos", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountListByAccountNosResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAccountListByAccountNosAsync(int[] accountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountDetails", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountDetailsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetAccountDetails(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountDetails", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountDetailsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetAccountDetailsAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetInContactCluster", ReplyAction="http://tempuri.org/ISalesforceService/GetInContactClusterResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetInContactCluster(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetInContactCluster", ReplyAction="http://tempuri.org/ISalesforceService/GetInContactClusterResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetInContactClusterAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SendFeedback", ReplyAction="http://tempuri.org/ISalesforceService/SendFeedbackResponse")]
        string SendFeedback(ManageMyNotificationsBusinessLayer.inContactSalesforceService.ServiceSiteArticleFeedback feedback, System.Guid EmployeeGuid, System.Nullable<int> parentAcctNumber, int accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/SendFeedback", ReplyAction="http://tempuri.org/ISalesforceService/SendFeedbackResponse")]
        System.Threading.Tasks.Task<string> SendFeedbackAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.ServiceSiteArticleFeedback feedback, System.Guid EmployeeGuid, System.Nullable<int> parentAcctNumber, int accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetDocumentByFileNameAndWorkspace", ReplyAction="http://tempuri.org/ISalesforceService/GetDocumentByFileNameAndWorkspaceResponse")]
        System.IO.Stream GetDocumentByFileNameAndWorkspace(string documentFileName, string workspaceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetDocumentByFileNameAndWorkspace", ReplyAction="http://tempuri.org/ISalesforceService/GetDocumentByFileNameAndWorkspaceResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetDocumentByFileNameAndWorkspaceAsync(string documentFileName, string workspaceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetDocumentBySupportSiteKey", ReplyAction="http://tempuri.org/ISalesforceService/GetDocumentBySupportSiteKeyResponse")]
        System.IO.Stream GetDocumentBySupportSiteKey(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetDocumentBySupportSiteKey", ReplyAction="http://tempuri.org/ISalesforceService/GetDocumentBySupportSiteKeyResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetDocumentBySupportSiteKeyAsync(string key);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCustomerAccounts", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCustomerAccountsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetPartnerCustomerAccounts(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetPartnerCustomerAccounts", ReplyAction="http://tempuri.org/ISalesforceService/GetPartnerCustomerAccountsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetPartnerCustomerAccountsAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetSidebarLinks", ReplyAction="http://tempuri.org/ISalesforceService/GetSidebarLinksResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.SidebarLink[] GetSidebarLinks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetSidebarLinks", ReplyAction="http://tempuri.org/ISalesforceService/GetSidebarLinksResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.SidebarLink[]> GetSidebarLinksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateCaseComment", ReplyAction="http://tempuri.org/ISalesforceService/CreateCaseCommentResponse")]
        string CreateCaseComment(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseComment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateCaseComment", ReplyAction="http://tempuri.org/ISalesforceService/CreateCaseCommentResponse")]
        System.Threading.Tasks.Task<string> CreateCaseCommentAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseComment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetIPVoiceSeatsInfo", ReplyAction="http://tempuri.org/ISalesforceService/GetIPVoiceSeatsInfoResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[] GetIPVoiceSeatsInfo(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetIPVoiceSeatsInfo", ReplyAction="http://tempuri.org/ISalesforceService/GetIPVoiceSeatsInfoResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[]> GetIPVoiceSeatsInfoAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCounterpathInfo", ReplyAction="http://tempuri.org/ISalesforceService/GetCounterpathInfoResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[] GetCounterpathInfo(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCounterpathInfo", ReplyAction="http://tempuri.org/ISalesforceService/GetCounterpathInfoResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[]> GetCounterpathInfoAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrders", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrdersResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[] GetCustomerOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrders", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrdersResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[]> GetCustomerOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GeAllCustomerOrders", ReplyAction="http://tempuri.org/ISalesforceService/GeAllCustomerOrdersResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[] GeAllCustomerOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GeAllCustomerOrders", ReplyAction="http://tempuri.org/ISalesforceService/GeAllCustomerOrdersResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[]> GeAllCustomerOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrdersByStatus", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrdersByStatusResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[] GetCustomerOrdersByStatus(string orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrdersByStatus", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrdersByStatusResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[]> GetCustomerOrdersByStatusAsync(string orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderHistoryItems", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderHistoryItemsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderHistoryItem[] GetCustomerOrderHistoryItems(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderHistoryItems", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderHistoryItemsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderHistoryItem[]> GetCustomerOrderHistoryItemsAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderDetails", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderDetailsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder GetCustomerOrderDetails(int[] customerAccountNos, string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderDetails", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderDetailsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder> GetCustomerOrderDetailsAsync(int[] customerAccountNos, string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderNameByGuid", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderNameByGuidResponse")]
        string GetCustomerOrderNameByGuid(string orderGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderNameByGuid", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderNameByGuidResponse")]
        System.Threading.Tasks.Task<string> GetCustomerOrderNameByGuidAsync(string orderGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemForLineItemGuid", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemForLineItemGuidResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems GetOrderLineItemForLineItemGuid(string orderLineItemGUID, bool addSpecificItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemForLineItemGuid", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemForLineItemGuidResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems> GetOrderLineItemForLineItemGuidAsync(string orderLineItemGUID, bool addSpecificItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderIDs", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderIDsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderID[] GetCustomerOrderIDs(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCustomerOrderIDs", ReplyAction="http://tempuri.org/ISalesforceService/GetCustomerOrderIDsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderID[]> GetCustomerOrderIDsAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItems", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetOrderLineItems(string orderGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItems", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetOrderLineItemsAsync(string orderGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrderByStatus", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrderByStatusResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetOrderLineItemsForOrderByStatus(string orderGUID, string lineItemStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrderByStatus", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrderByStatusResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetOrderLineItemsForOrderByStatusAsync(string orderGUID, string lineItemStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrder", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrderResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetOrderLineItemsForOrder(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrder", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemsForOrderResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetOrderLineItemsForOrderAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetNewRetryOrderLineItemsForOrder", ReplyAction="http://tempuri.org/ISalesforceService/GetNewRetryOrderLineItemsForOrderResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetNewRetryOrderLineItemsForOrder(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetNewRetryOrderLineItemsForOrder", ReplyAction="http://tempuri.org/ISalesforceService/GetNewRetryOrderLineItemsForOrderResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetNewRetryOrderLineItemsForOrderAsync(string orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineSpecificItems", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineSpecificItemsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineSpecificItem[] GetOrderLineSpecificItems(string orderLineItemGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineSpecificItems", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineSpecificItemsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineSpecificItem[]> GetOrderLineSpecificItemsAsync(string orderLineItemGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemComments", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemCommentsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemComment[] GetOrderLineItemComments(string orderLineItemGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetOrderLineItemComments", ReplyAction="http://tempuri.org/ISalesforceService/GetOrderLineItemCommentsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemComment[]> GetOrderLineItemCommentsAsync(string orderLineItemGUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderStatus", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderStatusResponse")]
        bool UpdateOrderStatus(string orderId, string orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderStatus", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateOrderStatusAsync(string orderId, string orderStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderLineGeneralItemStatus", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderLineGeneralItemStatusResponse")]
        bool UpdateOrderLineGeneralItemStatus(string lineItemId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderLineGeneralItemStatus", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderLineGeneralItemStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateOrderLineGeneralItemStatusAsync(string lineItemId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderLineItemsForLocalDid", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderLineItemsForLocalDidResponse")]
        bool UpdateOrderLineItemsForLocalDid(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderLineItemsForLocalDid", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderLineItemsForLocalDidResponse")]
        System.Threading.Tasks.Task<bool> UpdateOrderLineItemsForLocalDidAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderLineItems", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderLineItemsResponse")]
        bool UpdateOrderLineItems(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemSpecificUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateOrderLineItems", ReplyAction="http://tempuri.org/ISalesforceService/UpdateOrderLineItemsResponse")]
        System.Threading.Tasks.Task<bool> UpdateOrderLineItemsAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemSpecificUpdate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/DeleteRecord", ReplyAction="http://tempuri.org/ISalesforceService/DeleteRecordResponse")]
        bool DeleteRecord(string objectName, string salesforceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/DeleteRecord", ReplyAction="http://tempuri.org/ISalesforceService/DeleteRecordResponse")]
        System.Threading.Tasks.Task<bool> DeleteRecordAsync(string objectName, string salesforceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/WildCardSearchForAccount", ReplyAction="http://tempuri.org/ISalesforceService/WildCardSearchForAccountResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSearchResult WildCardSearchForAccount(string searchTerm, ManageMyNotificationsBusinessLayer.inContactSalesforceService.SortDirection sortDirection, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSortColumn sortColumn, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountRecordType[] accountRecordTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/WildCardSearchForAccount", ReplyAction="http://tempuri.org/ISalesforceService/WildCardSearchForAccountResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSearchResult> WildCardSearchForAccountAsync(string searchTerm, ManageMyNotificationsBusinessLayer.inContactSalesforceService.SortDirection sortDirection, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSortColumn sortColumn, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountRecordType[] accountRecordTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetProjectDetails", ReplyAction="http://tempuri.org/ISalesforceService/GetProjectDetailsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProjectData GetProjectDetails(string projectNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetProjectDetails", ReplyAction="http://tempuri.org/ISalesforceService/GetProjectDetailsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProjectData> GetProjectDetailsAsync(string projectNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactRoleList", ReplyAction="http://tempuri.org/ISalesforceService/GetContactRoleListResponse")]
        string[] GetContactRoleList(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactRoleList", ReplyAction="http://tempuri.org/ISalesforceService/GetContactRoleListResponse")]
        System.Threading.Tasks.Task<string[]> GetContactRoleListAsync(bool activeOnly);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactRolesCheckedByContact", ReplyAction="http://tempuri.org/ISalesforceService/GetContactRolesCheckedByContactResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRole[] GetContactRolesCheckedByContact(string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactRolesCheckedByContact", ReplyAction="http://tempuri.org/ISalesforceService/GetContactRolesCheckedByContactResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRole[]> GetContactRolesCheckedByContactAsync(string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountsByAccountNumberAndAccountType", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountsByAccountNumberAndAccountTypeRes" +
            "ponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAccountsByAccountNumberAndAccountType(System.Collections.Generic.Dictionary<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType, string[]> accountIdsByAccountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetAccountsByAccountNumberAndAccountType", ReplyAction="http://tempuri.org/ISalesforceService/GetAccountsByAccountNumberAndAccountTypeRes" +
            "ponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAccountsByAccountNumberAndAccountTypeAsync(System.Collections.Generic.Dictionary<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType, string[]> accountIdsByAccountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/InsertContactForMultipleAccounts", ReplyAction="http://tempuri.org/ISalesforceService/InsertContactForMultipleAccountsResponse")]
        void InsertContactForMultipleAccounts(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact updateContactRecord, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/InsertContactForMultipleAccounts", ReplyAction="http://tempuri.org/ISalesforceService/InsertContactForMultipleAccountsResponse")]
        System.Threading.Tasks.Task InsertContactForMultipleAccountsAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact updateContactRecord, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCasesByCustomerOrderId", ReplyAction="http://tempuri.org/ISalesforceService/GetCasesByCustomerOrderIdResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] GetCasesByCustomerOrderId(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetCasesByCustomerOrderId", ReplyAction="http://tempuri.org/ISalesforceService/GetCasesByCustomerOrderIdResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[]> GetCasesByCustomerOrderIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByCaseNumber", ReplyAction="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByCaseNumberRes" +
            "ponse")]
        void UpdateThirdPartyTicketNumberByCaseNumber(string salesforceCaseNumber, string thirdPartTicketNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByCaseNumber", ReplyAction="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByCaseNumberRes" +
            "ponse")]
        System.Threading.Tasks.Task UpdateThirdPartyTicketNumberByCaseNumberAsync(string salesforceCaseNumber, string thirdPartTicketNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByTroubleReport" +
            "Info", ReplyAction="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByTroubleReport" +
            "InfoResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateResponse UpdateThirdPartyTicketNumberByTroubleReportInfo(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateRequest requestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByTroubleReport" +
            "Info", ReplyAction="http://tempuri.org/ISalesforceService/UpdateThirdPartyTicketNumberByTroubleReport" +
            "InfoResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateResponse> UpdateThirdPartyTicketNumberByTroubleReportInfoAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateRequest requestData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetMainBillingContactRoles", ReplyAction="http://tempuri.org/ISalesforceService/GetMainBillingContactRolesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.MainBillingContactRoles[] GetMainBillingContactRoles(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetMainBillingContactRoles", ReplyAction="http://tempuri.org/ISalesforceService/GetMainBillingContactRolesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.MainBillingContactRoles[]> GetMainBillingContactRolesAsync(string AccountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/AccountInActiveStatus", ReplyAction="http://tempuri.org/ISalesforceService/AccountInActiveStatusResponse")]
        bool AccountInActiveStatus(string AccountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/AccountInActiveStatus", ReplyAction="http://tempuri.org/ISalesforceService/AccountInActiveStatusResponse")]
        System.Threading.Tasks.Task<bool> AccountInActiveStatusAsync(string AccountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetTAMEmail", ReplyAction="http://tempuri.org/ISalesforceService/GetTAMEmailResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.User GetTAMEmail(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetTAMEmail", ReplyAction="http://tempuri.org/ISalesforceService/GetTAMEmailResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.User> GetTAMEmailAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetTSAEmail", ReplyAction="http://tempuri.org/ISalesforceService/GetTSAEmailResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.User GetTSAEmail(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetTSAEmail", ReplyAction="http://tempuri.org/ISalesforceService/GetTSAEmailResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.User> GetTSAEmailAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/checkPremiseEngage", ReplyAction="http://tempuri.org/ISalesforceService/checkPremiseEngageResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account checkPremiseEngage(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/checkPremiseEngage", ReplyAction="http://tempuri.org/ISalesforceService/checkPremiseEngageResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> checkPremiseEngageAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactsForAccountHierarchy", ReplyAction="http://tempuri.org/ISalesforceService/GetContactsForAccountHierarchyResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[] GetContactsForAccountHierarchy(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactsForAccountHierarchy", ReplyAction="http://tempuri.org/ISalesforceService/GetContactsForAccountHierarchyResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[]> GetContactsForAccountHierarchyAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactNameByContactId", ReplyAction="http://tempuri.org/ISalesforceService/GetContactNameByContactIdResponse")]
        string GetContactNameByContactId(string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetContactNameByContactId", ReplyAction="http://tempuri.org/ISalesforceService/GetContactNameByContactIdResponse")]
        System.Threading.Tasks.Task<string> GetContactNameByContactIdAsync(string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateCaseForAllCustomerOrders", ReplyAction="http://tempuri.org/ISalesforceService/CreateCaseForAllCustomerOrdersResponse")]
        string CreateCaseForAllCustomerOrders(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case domainCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/CreateCaseForAllCustomerOrders", ReplyAction="http://tempuri.org/ISalesforceService/CreateCaseForAllCustomerOrdersResponse")]
        System.Threading.Tasks.Task<string> CreateCaseForAllCustomerOrdersAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case domainCase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetInstrumentIdOfPendingDisconnect", ReplyAction="http://tempuri.org/ISalesforceService/GetInstrumentIdOfPendingDisconnectResponse")]
        string[] GetInstrumentIdOfPendingDisconnect(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetInstrumentIdOfPendingDisconnect", ReplyAction="http://tempuri.org/ISalesforceService/GetInstrumentIdOfPendingDisconnectResponse")]
        System.Threading.Tasks.Task<string[]> GetInstrumentIdOfPendingDisconnectAsync(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetChildAccountsByParentAccount", ReplyAction="http://tempuri.org/ISalesforceService/GetChildAccountsByParentAccountResponse")]
        int[] GetChildAccountsByParentAccount(int[] accountNos, int[] parentAccountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/GetChildAccountsByParentAccount", ReplyAction="http://tempuri.org/ISalesforceService/GetChildAccountsByParentAccountResponse")]
        System.Threading.Tasks.Task<int[]> GetChildAccountsByParentAccountAsync(int[] accountNos, int[] parentAccountNos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/IsFedRampAccount", ReplyAction="http://tempuri.org/ISalesforceService/IsFedRampAccountResponse")]
        bool IsFedRampAccount(int accountNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceService/IsFedRampAccount", ReplyAction="http://tempuri.org/ISalesforceService/IsFedRampAccountResponse")]
        System.Threading.Tasks.Task<bool> IsFedRampAccountAsync(int accountNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesforceServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesforceServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceService {
        
        public SalesforceServiceClient() {
        }
        
        public SalesforceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesforceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertCustomerOrder(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder orderToInsert) {
            return base.Channel.InsertCustomerOrder(orderToInsert);
        }
        
        public System.Threading.Tasks.Task<string> InsertCustomerOrderAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder orderToInsert) {
            return base.Channel.InsertCustomerOrderAsync(orderToInsert);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Q_A GetQ_AArticle(string articleNumber) {
            return base.Channel.GetQ_AArticle(articleNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Q_A> GetQ_AArticleAsync(string articleNumber) {
            return base.Channel.GetQ_AArticleAsync(articleNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Solution GetSolutionArticle(string articleNumber) {
            return base.Channel.GetSolutionArticle(articleNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Solution> GetSolutionArticleAsync(string articleNumber) {
            return base.Channel.GetSolutionArticleAsync(articleNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.HowTo GetHowToArticle(string articleNumber) {
            return base.Channel.GetHowToArticle(articleNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.HowTo> GetHowToArticleAsync(string articleNumber) {
            return base.Channel.GetHowToArticleAsync(articleNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion GetArticleNumberByTitle(string title) {
            return base.Channel.GetArticleNumberByTitle(title);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion> GetArticleNumberByTitleAsync(string title) {
            return base.Channel.GetArticleNumberByTitleAsync(title);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion[] GetArticleSummariesByArticleNumbers(string[] articleNumbers) {
            return base.Channel.GetArticleSummariesByArticleNumbers(articleNumbers);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.KnowledgeArticleVersion[]> GetArticleSummariesByArticleNumbersAsync(string[] articleNumbers) {
            return base.Channel.GetArticleSummariesByArticleNumbersAsync(articleNumbers);
        }
        
        public byte[] GetArticleImageByIds(string eid, string feoid, string refid) {
            return base.Channel.GetArticleImageByIds(eid, feoid, refid);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetArticleImageByIdsAsync(string eid, string feoid, string refid) {
            return base.Channel.GetArticleImageByIdsAsync(eid, feoid, refid);
        }
        
        public void CreateCaseArticle(string caseId, string articleNumber) {
            base.Channel.CreateCaseArticle(caseId, articleNumber);
        }
        
        public System.Threading.Tasks.Task CreateCaseArticleAsync(string caseId, string articleNumber) {
            return base.Channel.CreateCaseArticleAsync(caseId, articleNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase GetPartnerCase(string caseId) {
            return base.Channel.GetPartnerCase(caseId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> GetPartnerCaseAsync(string caseId) {
            return base.Channel.GetPartnerCaseAsync(caseId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[] GetOpenPartnerCases(int accountNo) {
            return base.Channel.GetOpenPartnerCases(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[]> GetOpenPartnerCasesAsync(int accountNo) {
            return base.Channel.GetOpenPartnerCasesAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[] GetPartnerCaseData(string[] caseIds) {
            return base.Channel.GetPartnerCaseData(caseIds);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[]> GetPartnerCaseDataAsync(string[] caseIds) {
            return base.Channel.GetPartnerCaseDataAsync(caseIds);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseDetail GetCaseFeeds(string caseNumber) {
            return base.Channel.GetCaseFeeds(caseNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseDetail> GetCaseFeedsAsync(string caseNumber) {
            return base.Channel.GetCaseFeedsAsync(caseNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchResponse[] SearchCases(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchArgs args) {
            return base.Channel.SearchCases(args);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchResponse[]> SearchCasesAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseSearchArgs args) {
            return base.Channel.SearchCasesAsync(args);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] GetCaseList(string[] caseNos, string rqType) {
            return base.Channel.GetCaseList(caseNos, rqType);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[]> GetCaseListAsync(string[] caseNos, string rqType) {
            return base.Channel.GetCaseListAsync(caseNos, rqType);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] GetCaseListByRecordTypeAndReason(string[] caseNos, string rqType, string reason) {
            return base.Channel.GetCaseListByRecordTypeAndReason(caseNos, rqType, reason);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[]> GetCaseListByRecordTypeAndReasonAsync(string[] caseNos, string rqType, string reason) {
            return base.Channel.GetCaseListByRecordTypeAndReasonAsync(caseNos, rqType, reason);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchResponse[] SearchOrders(ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchArgs args) {
            return base.Channel.SearchOrders(args);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchResponse[]> SearchOrdersAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderSearchArgs args) {
            return base.Channel.SearchOrdersAsync(args);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseGetAccountAndContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid) {
            return base.Channel.CreatePartnerCaseGetAccountAndContact(partnerCase, accountNo, adfsGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseGetAccountAndContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid) {
            return base.Channel.CreatePartnerCaseGetAccountAndContactAsync(partnerCase, accountNo, adfsGuid);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseGetAccountAndParentContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid, int parentAccountNo) {
            return base.Channel.CreatePartnerCaseGetAccountAndParentContact(partnerCase, accountNo, adfsGuid, parentAccountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseGetAccountAndParentContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo, string adfsGuid, int parentAccountNo) {
            return base.Channel.CreatePartnerCaseGetAccountAndParentContactAsync(partnerCase, accountNo, adfsGuid, parentAccountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseGetAccount(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo) {
            return base.Channel.CreatePartnerCaseGetAccount(partnerCase, accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseGetAccountAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase, int accountNo) {
            return base.Channel.CreatePartnerCaseGetAccountAsync(partnerCase, accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCase(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase) {
            return base.Channel.CreatePartnerCase(partnerCase);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase) {
            return base.Channel.CreatePartnerCaseAsync(partnerCase);
        }
        
        public void UpdatePartnerCase(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase) {
            base.Channel.UpdatePartnerCase(partnerCase);
        }
        
        public System.Threading.Tasks.Task UpdatePartnerCaseAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase) {
            return base.Channel.UpdatePartnerCaseAsync(partnerCase);
        }
        
        public bool UpdateCaseStatus(string caseId, string status) {
            return base.Channel.UpdateCaseStatus(caseId, status);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCaseStatusAsync(string caseId, string status) {
            return base.Channel.UpdateCaseStatusAsync(caseId, status);
        }
        
        public bool UpdateCaseCadebillCredit(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] cases) {
            return base.Channel.UpdateCaseCadebillCredit(cases);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCaseCadebillCreditAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] cases) {
            return base.Channel.UpdateCaseCadebillCreditAsync(cases);
        }
        
        public System.Collections.Generic.Dictionary<string, bool> UpdateCaseCadebillTaxCredit(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] taxCreditCases) {
            return base.Channel.UpdateCaseCadebillTaxCredit(taxCreditCases);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, bool>> UpdateCaseCadebillTaxCreditAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] taxCreditCases) {
            return base.Channel.UpdateCaseCadebillTaxCreditAsync(taxCreditCases);
        }
        
        public bool UpdateAccountCreditClass(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] accounts) {
            return base.Channel.UpdateAccountCreditClass(accounts);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAccountCreditClassAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] accounts) {
            return base.Channel.UpdateAccountCreditClassAsync(accounts);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[] GetOpenPartnerCasesWithRequestType(string accountNo, string Type) {
            return base.Channel.GetOpenPartnerCasesWithRequestType(accountNo, Type);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase[]> GetOpenPartnerCasesWithRequestTypeAsync(string accountNo, string Type) {
            return base.Channel.GetOpenPartnerCasesWithRequestTypeAsync(accountNo, Type);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Technical GetTechnicalArticle(string articleNumber) {
            return base.Channel.GetTechnicalArticle(articleNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Technical> GetTechnicalArticleAsync(string articleNumber) {
            return base.Channel.GetTechnicalArticleAsync(articleNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.General GetGeneralArticle(string articleNumber) {
            return base.Channel.GetGeneralArticle(articleNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.General> GetGeneralArticleAsync(string articleNumber) {
            return base.Channel.GetGeneralArticleAsync(articleNumber);
        }
        
        public string GetArticlesFromCaseInformation(string subject, string description) {
            return base.Channel.GetArticlesFromCaseInformation(subject, description);
        }
        
        public System.Threading.Tasks.Task<string> GetArticlesFromCaseInformationAsync(string subject, string description) {
            return base.Channel.GetArticlesFromCaseInformationAsync(subject, description);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetPartnerAccount(int[] accountNos) {
            return base.Channel.GetPartnerAccount(accountNos);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetPartnerAccountAsync(int[] accountNos) {
            return base.Channel.GetPartnerAccountAsync(accountNos);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetPartnerAccounts(int[] accountNos) {
            return base.Channel.GetPartnerAccounts(accountNos);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetPartnerAccountsAsync(int[] accountNos) {
            return base.Channel.GetPartnerAccountsAsync(accountNos);
        }
        
        public string ListServices() {
            return base.Channel.ListServices();
        }
        
        public System.Threading.Tasks.Task<string> ListServicesAsync() {
            return base.Channel.ListServicesAsync();
        }
        
        public byte[] GetArticleImage(string url) {
            return base.Channel.GetArticleImage(url);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetArticleImageAsync(string url) {
            return base.Channel.GetArticleImageAsync(url);
        }
        
        public bool PostIdea(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Idea idea) {
            return base.Channel.PostIdea(idea);
        }
        
        public System.Threading.Tasks.Task<bool> PostIdeaAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Idea idea) {
            return base.Channel.PostIdeaAsync(idea);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.ArticleSearchResponse[] SearchArticles(string searchString, System.Collections.Generic.Dictionary<string, string> dataCategories) {
            return base.Channel.SearchArticles(searchString, dataCategories);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ArticleSearchResponse[]> SearchArticlesAsync(string searchString, System.Collections.Generic.Dictionary<string, string> dataCategories) {
            return base.Channel.SearchArticlesAsync(searchString, dataCategories);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.General GetSolutions() {
            return base.Channel.GetSolutions();
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.General> GetSolutionsAsync() {
            return base.Channel.GetSolutionsAsync();
        }
        
        public string CreateAttachment(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Attachment attachment) {
            return base.Channel.CreateAttachment(attachment);
        }
        
        public System.Threading.Tasks.Task<string> CreateAttachmentAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Attachment attachment) {
            return base.Channel.CreateAttachmentAsync(attachment);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase GetPartnerCaseById(string Id) {
            return base.Channel.GetPartnerCaseById(Id);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> GetPartnerCaseByIdAsync(string Id) {
            return base.Channel.GetPartnerCaseByIdAsync(Id);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase CreatePartnerCaseAsRecordTypeId(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase) {
            return base.Channel.CreatePartnerCaseAsRecordTypeId(partnerCase);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> CreatePartnerCaseAsRecordTypeIdAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase partnerCase) {
            return base.Channel.CreatePartnerCaseAsRecordTypeIdAsync(partnerCase);
        }
        
        public string GetRecordTypeIdByName(string recordTypeName) {
            return base.Channel.GetRecordTypeIdByName(recordTypeName);
        }
        
        public System.Threading.Tasks.Task<string> GetRecordTypeIdByNameAsync(string recordTypeName) {
            return base.Channel.GetRecordTypeIdByNameAsync(recordTypeName);
        }
        
        public string CreateContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact) {
            return base.Channel.CreateContact(contact);
        }
        
        public System.Threading.Tasks.Task<string> CreateContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact) {
            return base.Channel.CreateContactAsync(contact);
        }
        
        public string GetCaseIDByCaseNumber(string caseNumber) {
            return base.Channel.GetCaseIDByCaseNumber(caseNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetCaseIDByCaseNumberAsync(string caseNumber) {
            return base.Channel.GetCaseIDByCaseNumberAsync(caseNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact GetContact(string adfsGuid, int accountNo) {
            return base.Channel.GetContact(adfsGuid, accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact> GetContactAsync(string adfsGuid, int accountNo) {
            return base.Channel.GetContactAsync(adfsGuid, accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact GetContactByEmail(string email) {
            return base.Channel.GetContactByEmail(email);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact> GetContactByEmailAsync(string email) {
            return base.Channel.GetContactByEmailAsync(email);
        }
        
        public string GetAccountIDByAccountNo(double accountNo) {
            return base.Channel.GetAccountIDByAccountNo(accountNo);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountIDByAccountNoAsync(double accountNo) {
            return base.Channel.GetAccountIDByAccountNoAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase GetCaseDetailsByTroubleTktNumber(string troubleTktNumber) {
            return base.Channel.GetCaseDetailsByTroubleTktNumber(troubleTktNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCase> GetCaseDetailsByTroubleTktNumberAsync(string troubleTktNumber) {
            return base.Channel.GetCaseDetailsByTroubleTktNumberAsync(troubleTktNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[] GetContactEmailByRole(string role, int accountNo) {
            return base.Channel.GetContactEmailByRole(role, accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[]> GetContactEmailByRoleAsync(string role, int accountNo) {
            return base.Channel.GetContactEmailByRoleAsync(role, accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[] GetAccountContactsForRole(string accountNo, string contactEmail, string adfsGuid) {
            return base.Channel.GetAccountContactsForRole(accountNo, contactEmail, adfsGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[]> GetAccountContactsForRoleAsync(string accountNo, string contactEmail, string adfsGuid) {
            return base.Channel.GetAccountContactsForRoleAsync(accountNo, contactEmail, adfsGuid);
        }
        
        public bool UpdateContactsByAdfsGuid(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact, string adfsGuid, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles) {
            return base.Channel.UpdateContactsByAdfsGuid(contact, adfsGuid, contactRoles);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContactsByAdfsGuidAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact contact, string adfsGuid, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles) {
            return base.Channel.UpdateContactsByAdfsGuidAsync(contact, adfsGuid, contactRoles);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetAccountByAccountNo(int accountNo) {
            return base.Channel.GetAccountByAccountNo(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetAccountByAccountNoAsync(int accountNo) {
            return base.Channel.GetAccountByAccountNoAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAccountListByAccountNos(int[] accountNos) {
            return base.Channel.GetAccountListByAccountNos(accountNos);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAccountListByAccountNosAsync(int[] accountNos) {
            return base.Channel.GetAccountListByAccountNosAsync(accountNos);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetAccountDetails(int accountNo) {
            return base.Channel.GetAccountDetails(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetAccountDetailsAsync(int accountNo) {
            return base.Channel.GetAccountDetailsAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account GetInContactCluster(int accountNo) {
            return base.Channel.GetInContactCluster(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> GetInContactClusterAsync(int accountNo) {
            return base.Channel.GetInContactClusterAsync(accountNo);
        }
        
        public string SendFeedback(ManageMyNotificationsBusinessLayer.inContactSalesforceService.ServiceSiteArticleFeedback feedback, System.Guid EmployeeGuid, System.Nullable<int> parentAcctNumber, int accountNumber) {
            return base.Channel.SendFeedback(feedback, EmployeeGuid, parentAcctNumber, accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> SendFeedbackAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.ServiceSiteArticleFeedback feedback, System.Guid EmployeeGuid, System.Nullable<int> parentAcctNumber, int accountNumber) {
            return base.Channel.SendFeedbackAsync(feedback, EmployeeGuid, parentAcctNumber, accountNumber);
        }
        
        public System.IO.Stream GetDocumentByFileNameAndWorkspace(string documentFileName, string workspaceName) {
            return base.Channel.GetDocumentByFileNameAndWorkspace(documentFileName, workspaceName);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetDocumentByFileNameAndWorkspaceAsync(string documentFileName, string workspaceName) {
            return base.Channel.GetDocumentByFileNameAndWorkspaceAsync(documentFileName, workspaceName);
        }
        
        public System.IO.Stream GetDocumentBySupportSiteKey(string key) {
            return base.Channel.GetDocumentBySupportSiteKey(key);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetDocumentBySupportSiteKeyAsync(string key) {
            return base.Channel.GetDocumentBySupportSiteKeyAsync(key);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetPartnerCustomerAccounts(int accountNo) {
            return base.Channel.GetPartnerCustomerAccounts(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetPartnerCustomerAccountsAsync(int accountNo) {
            return base.Channel.GetPartnerCustomerAccountsAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.SidebarLink[] GetSidebarLinks() {
            return base.Channel.GetSidebarLinks();
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.SidebarLink[]> GetSidebarLinksAsync() {
            return base.Channel.GetSidebarLinksAsync();
        }
        
        public string CreateCaseComment(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseComment comment) {
            return base.Channel.CreateCaseComment(comment);
        }
        
        public System.Threading.Tasks.Task<string> CreateCaseCommentAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.CaseComment comment) {
            return base.Channel.CreateCaseCommentAsync(comment);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[] GetIPVoiceSeatsInfo(int accountNo) {
            return base.Channel.GetIPVoiceSeatsInfo(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[]> GetIPVoiceSeatsInfoAsync(int accountNo) {
            return base.Channel.GetIPVoiceSeatsInfoAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[] GetCounterpathInfo(int accountNo) {
            return base.Channel.GetCounterpathInfo(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.RecentOrder[]> GetCounterpathInfoAsync(int accountNo) {
            return base.Channel.GetCounterpathInfoAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[] GetCustomerOrders() {
            return base.Channel.GetCustomerOrders();
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[]> GetCustomerOrdersAsync() {
            return base.Channel.GetCustomerOrdersAsync();
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[] GeAllCustomerOrders() {
            return base.Channel.GeAllCustomerOrders();
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[]> GeAllCustomerOrdersAsync() {
            return base.Channel.GeAllCustomerOrdersAsync();
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[] GetCustomerOrdersByStatus(string orderStatus) {
            return base.Channel.GetCustomerOrdersByStatus(orderStatus);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder[]> GetCustomerOrdersByStatusAsync(string orderStatus) {
            return base.Channel.GetCustomerOrdersByStatusAsync(orderStatus);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderHistoryItem[] GetCustomerOrderHistoryItems(string orderId) {
            return base.Channel.GetCustomerOrderHistoryItems(orderId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderHistoryItem[]> GetCustomerOrderHistoryItemsAsync(string orderId) {
            return base.Channel.GetCustomerOrderHistoryItemsAsync(orderId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder GetCustomerOrderDetails(int[] customerAccountNos, string orderId) {
            return base.Channel.GetCustomerOrderDetails(customerAccountNos, orderId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrder> GetCustomerOrderDetailsAsync(int[] customerAccountNos, string orderId) {
            return base.Channel.GetCustomerOrderDetailsAsync(customerAccountNos, orderId);
        }
        
        public string GetCustomerOrderNameByGuid(string orderGuid) {
            return base.Channel.GetCustomerOrderNameByGuid(orderGuid);
        }
        
        public System.Threading.Tasks.Task<string> GetCustomerOrderNameByGuidAsync(string orderGuid) {
            return base.Channel.GetCustomerOrderNameByGuidAsync(orderGuid);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems GetOrderLineItemForLineItemGuid(string orderLineItemGUID, bool addSpecificItems) {
            return base.Channel.GetOrderLineItemForLineItemGuid(orderLineItemGUID, addSpecificItems);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems> GetOrderLineItemForLineItemGuidAsync(string orderLineItemGUID, bool addSpecificItems) {
            return base.Channel.GetOrderLineItemForLineItemGuidAsync(orderLineItemGUID, addSpecificItems);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderID[] GetCustomerOrderIDs(int accountNo) {
            return base.Channel.GetCustomerOrderIDs(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.CustomerOrderID[]> GetCustomerOrderIDsAsync(int accountNo) {
            return base.Channel.GetCustomerOrderIDsAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetOrderLineItems(string orderGUID) {
            return base.Channel.GetOrderLineItems(orderGUID);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetOrderLineItemsAsync(string orderGUID) {
            return base.Channel.GetOrderLineItemsAsync(orderGUID);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetOrderLineItemsForOrderByStatus(string orderGUID, string lineItemStatus) {
            return base.Channel.GetOrderLineItemsForOrderByStatus(orderGUID, lineItemStatus);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetOrderLineItemsForOrderByStatusAsync(string orderGUID, string lineItemStatus) {
            return base.Channel.GetOrderLineItemsForOrderByStatusAsync(orderGUID, lineItemStatus);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetOrderLineItemsForOrder(string orderId) {
            return base.Channel.GetOrderLineItemsForOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetOrderLineItemsForOrderAsync(string orderId) {
            return base.Channel.GetOrderLineItemsForOrderAsync(orderId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[] GetNewRetryOrderLineItemsForOrder(string orderId) {
            return base.Channel.GetNewRetryOrderLineItemsForOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineGeneralItems[]> GetNewRetryOrderLineItemsForOrderAsync(string orderId) {
            return base.Channel.GetNewRetryOrderLineItemsForOrderAsync(orderId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineSpecificItem[] GetOrderLineSpecificItems(string orderLineItemGUID) {
            return base.Channel.GetOrderLineSpecificItems(orderLineItemGUID);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.OrderLineSpecificItem[]> GetOrderLineSpecificItemsAsync(string orderLineItemGUID) {
            return base.Channel.GetOrderLineSpecificItemsAsync(orderLineItemGUID);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemComment[] GetOrderLineItemComments(string orderLineItemGUID) {
            return base.Channel.GetOrderLineItemComments(orderLineItemGUID);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemComment[]> GetOrderLineItemCommentsAsync(string orderLineItemGUID) {
            return base.Channel.GetOrderLineItemCommentsAsync(orderLineItemGUID);
        }
        
        public bool UpdateOrderStatus(string orderId, string orderStatus) {
            return base.Channel.UpdateOrderStatus(orderId, orderStatus);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderStatusAsync(string orderId, string orderStatus) {
            return base.Channel.UpdateOrderStatusAsync(orderId, orderStatus);
        }
        
        public bool UpdateOrderLineGeneralItemStatus(string lineItemId, string status) {
            return base.Channel.UpdateOrderLineGeneralItemStatus(lineItemId, status);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderLineGeneralItemStatusAsync(string lineItemId, string status) {
            return base.Channel.UpdateOrderLineGeneralItemStatusAsync(lineItemId, status);
        }
        
        public bool UpdateOrderLineItemsForLocalDid(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemUpdate) {
            return base.Channel.UpdateOrderLineItemsForLocalDid(ListLineItemUpdate);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderLineItemsForLocalDidAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemUpdate) {
            return base.Channel.UpdateOrderLineItemsForLocalDidAsync(ListLineItemUpdate);
        }
        
        public bool UpdateOrderLineItems(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemSpecificUpdate) {
            return base.Channel.UpdateOrderLineItems(ListLineItemSpecificUpdate);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderLineItemsAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.LineItemUpdate[] ListLineItemSpecificUpdate) {
            return base.Channel.UpdateOrderLineItemsAsync(ListLineItemSpecificUpdate);
        }
        
        public bool DeleteRecord(string objectName, string salesforceId) {
            return base.Channel.DeleteRecord(objectName, salesforceId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRecordAsync(string objectName, string salesforceId) {
            return base.Channel.DeleteRecordAsync(objectName, salesforceId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSearchResult WildCardSearchForAccount(string searchTerm, ManageMyNotificationsBusinessLayer.inContactSalesforceService.SortDirection sortDirection, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSortColumn sortColumn, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountRecordType[] accountRecordTypes) {
            return base.Channel.WildCardSearchForAccount(searchTerm, sortDirection, sortColumn, accountRecordTypes);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSearchResult> WildCardSearchForAccountAsync(string searchTerm, ManageMyNotificationsBusinessLayer.inContactSalesforceService.SortDirection sortDirection, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountSortColumn sortColumn, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountRecordType[] accountRecordTypes) {
            return base.Channel.WildCardSearchForAccountAsync(searchTerm, sortDirection, sortColumn, accountRecordTypes);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProjectData GetProjectDetails(string projectNumber) {
            return base.Channel.GetProjectDetails(projectNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProjectData> GetProjectDetailsAsync(string projectNumber) {
            return base.Channel.GetProjectDetailsAsync(projectNumber);
        }
        
        public string[] GetContactRoleList(bool activeOnly) {
            return base.Channel.GetContactRoleList(activeOnly);
        }
        
        public System.Threading.Tasks.Task<string[]> GetContactRoleListAsync(bool activeOnly) {
            return base.Channel.GetContactRoleListAsync(activeOnly);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRole[] GetContactRolesCheckedByContact(string adfsGuid) {
            return base.Channel.GetContactRolesCheckedByContact(adfsGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRole[]> GetContactRolesCheckedByContactAsync(string adfsGuid) {
            return base.Channel.GetContactRolesCheckedByContactAsync(adfsGuid);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAccountsByAccountNumberAndAccountType(System.Collections.Generic.Dictionary<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType, string[]> accountIdsByAccountType) {
            return base.Channel.GetAccountsByAccountNumberAndAccountType(accountIdsByAccountType);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAccountsByAccountNumberAndAccountTypeAsync(System.Collections.Generic.Dictionary<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType, string[]> accountIdsByAccountType) {
            return base.Channel.GetAccountsByAccountNumberAndAccountTypeAsync(accountIdsByAccountType);
        }
        
        public void InsertContactForMultipleAccounts(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact updateContactRecord, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles) {
            base.Channel.InsertContactForMultipleAccounts(updateContactRecord, contactRoles);
        }
        
        public System.Threading.Tasks.Task InsertContactForMultipleAccountsAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact updateContactRecord, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountContactRoles[] contactRoles) {
            return base.Channel.InsertContactForMultipleAccountsAsync(updateContactRecord, contactRoles);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[] GetCasesByCustomerOrderId(string id) {
            return base.Channel.GetCasesByCustomerOrderId(id);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case[]> GetCasesByCustomerOrderIdAsync(string id) {
            return base.Channel.GetCasesByCustomerOrderIdAsync(id);
        }
        
        public void UpdateThirdPartyTicketNumberByCaseNumber(string salesforceCaseNumber, string thirdPartTicketNumber) {
            base.Channel.UpdateThirdPartyTicketNumberByCaseNumber(salesforceCaseNumber, thirdPartTicketNumber);
        }
        
        public System.Threading.Tasks.Task UpdateThirdPartyTicketNumberByCaseNumberAsync(string salesforceCaseNumber, string thirdPartTicketNumber) {
            return base.Channel.UpdateThirdPartyTicketNumberByCaseNumberAsync(salesforceCaseNumber, thirdPartTicketNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateResponse UpdateThirdPartyTicketNumberByTroubleReportInfo(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateRequest requestData) {
            return base.Channel.UpdateThirdPartyTicketNumberByTroubleReportInfo(requestData);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateResponse> UpdateThirdPartyTicketNumberByTroubleReportInfoAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerCaseIncidentUpdateRequest requestData) {
            return base.Channel.UpdateThirdPartyTicketNumberByTroubleReportInfoAsync(requestData);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.MainBillingContactRoles[] GetMainBillingContactRoles(string AccountNumber) {
            return base.Channel.GetMainBillingContactRoles(AccountNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.MainBillingContactRoles[]> GetMainBillingContactRolesAsync(string AccountNumber) {
            return base.Channel.GetMainBillingContactRolesAsync(AccountNumber);
        }
        
        public bool AccountInActiveStatus(string AccountNo) {
            return base.Channel.AccountInActiveStatus(AccountNo);
        }
        
        public System.Threading.Tasks.Task<bool> AccountInActiveStatusAsync(string AccountNo) {
            return base.Channel.AccountInActiveStatusAsync(AccountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.User GetTAMEmail(int accountNo) {
            return base.Channel.GetTAMEmail(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.User> GetTAMEmailAsync(int accountNo) {
            return base.Channel.GetTAMEmailAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.User GetTSAEmail(int accountNo) {
            return base.Channel.GetTSAEmail(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.User> GetTSAEmailAsync(int accountNo) {
            return base.Channel.GetTSAEmailAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account checkPremiseEngage(int accountNo) {
            return base.Channel.checkPremiseEngage(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account> checkPremiseEngageAsync(int accountNo) {
            return base.Channel.checkPremiseEngageAsync(accountNo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[] GetContactsForAccountHierarchy(int accountNo) {
            return base.Channel.GetContactsForAccountHierarchy(accountNo);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Contact[]> GetContactsForAccountHierarchyAsync(int accountNo) {
            return base.Channel.GetContactsForAccountHierarchyAsync(accountNo);
        }
        
        public string GetContactNameByContactId(string contactId) {
            return base.Channel.GetContactNameByContactId(contactId);
        }
        
        public System.Threading.Tasks.Task<string> GetContactNameByContactIdAsync(string contactId) {
            return base.Channel.GetContactNameByContactIdAsync(contactId);
        }
        
        public string CreateCaseForAllCustomerOrders(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case domainCase) {
            return base.Channel.CreateCaseForAllCustomerOrders(domainCase);
        }
        
        public System.Threading.Tasks.Task<string> CreateCaseForAllCustomerOrdersAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Case domainCase) {
            return base.Channel.CreateCaseForAllCustomerOrdersAsync(domainCase);
        }
        
        public string[] GetInstrumentIdOfPendingDisconnect(int accountNo) {
            return base.Channel.GetInstrumentIdOfPendingDisconnect(accountNo);
        }
        
        public System.Threading.Tasks.Task<string[]> GetInstrumentIdOfPendingDisconnectAsync(int accountNo) {
            return base.Channel.GetInstrumentIdOfPendingDisconnectAsync(accountNo);
        }
        
        public int[] GetChildAccountsByParentAccount(int[] accountNos, int[] parentAccountNos) {
            return base.Channel.GetChildAccountsByParentAccount(accountNos, parentAccountNos);
        }
        
        public System.Threading.Tasks.Task<int[]> GetChildAccountsByParentAccountAsync(int[] accountNos, int[] parentAccountNos) {
            return base.Channel.GetChildAccountsByParentAccountAsync(accountNos, parentAccountNos);
        }
        
        public bool IsFedRampAccount(int accountNo) {
            return base.Channel.IsFedRampAccount(accountNo);
        }
        
        public System.Threading.Tasks.Task<bool> IsFedRampAccountAsync(int accountNo) {
            return base.Channel.IsFedRampAccountAsync(accountNo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.IDocumentLibrary")]
    public interface IDocumentLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentLibrary/GetSupportDocumentsByLibrary", ReplyAction="http://tempuri.org/IDocumentLibrary/GetSupportDocumentsByLibraryResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.SupportDocument[] GetSupportDocumentsByLibrary(string libraryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentLibrary/GetSupportDocumentsByLibrary", ReplyAction="http://tempuri.org/IDocumentLibrary/GetSupportDocumentsByLibraryResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.SupportDocument[]> GetSupportDocumentsByLibraryAsync(string libraryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentLibrary/GetDocumentStreamByContentDocument", ReplyAction="http://tempuri.org/IDocumentLibrary/GetDocumentStreamByContentDocumentResponse")]
        System.IO.Stream GetDocumentStreamByContentDocument(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentLibrary/GetDocumentStreamByContentDocument", ReplyAction="http://tempuri.org/IDocumentLibrary/GetDocumentStreamByContentDocumentResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetDocumentStreamByContentDocumentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentLibrary/GetDocumentStreamById", ReplyAction="http://tempuri.org/IDocumentLibrary/GetDocumentStreamByIdResponse")]
        System.IO.Stream GetDocumentStreamById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDocumentLibrary/GetDocumentStreamById", ReplyAction="http://tempuri.org/IDocumentLibrary/GetDocumentStreamByIdResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetDocumentStreamByIdAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentLibraryChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.IDocumentLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentLibraryClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.IDocumentLibrary>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.IDocumentLibrary {
        
        public DocumentLibraryClient() {
        }
        
        public DocumentLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.SupportDocument[] GetSupportDocumentsByLibrary(string libraryName) {
            return base.Channel.GetSupportDocumentsByLibrary(libraryName);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.SupportDocument[]> GetSupportDocumentsByLibraryAsync(string libraryName) {
            return base.Channel.GetSupportDocumentsByLibraryAsync(libraryName);
        }
        
        public System.IO.Stream GetDocumentStreamByContentDocument(string id) {
            return base.Channel.GetDocumentStreamByContentDocument(id);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetDocumentStreamByContentDocumentAsync(string id) {
            return base.Channel.GetDocumentStreamByContentDocumentAsync(id);
        }
        
        public System.IO.Stream GetDocumentStreamById(string id) {
            return base.Channel.GetDocumentStreamById(id);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetDocumentStreamByIdAsync(string id) {
            return base.Channel.GetDocumentStreamByIdAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.ISalesforceUserService")]
    public interface ISalesforceUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetPermissionSets", ReplyAction="http://tempuri.org/ISalesforceUserService/GetPermissionSetsResponse")]
        string[] GetPermissionSets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetPermissionSets", ReplyAction="http://tempuri.org/ISalesforceUserService/GetPermissionSetsResponse")]
        System.Threading.Tasks.Task<string[]> GetPermissionSetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/CreateSalesforceCommunityUserAndContact" +
            "", ReplyAction="http://tempuri.org/ISalesforceUserService/CreateSalesforceCommunityUserAndContact" +
            "Response")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse CreateSalesforceCommunityUserAndContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool NewFeature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/CreateSalesforceCommunityUserAndContact" +
            "", ReplyAction="http://tempuri.org/ISalesforceUserService/CreateSalesforceCommunityUserAndContact" +
            "Response")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse> CreateSalesforceCommunityUserAndContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool NewFeature);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceUsersByFederationIdenti" +
            "fier", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceUsersByFederationIdenti" +
            "fierResponse")]
        bool UpdateSalesforceUsersByFederationIdentifier(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, string federationIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceUsersByFederationIdenti" +
            "fier", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceUsersByFederationIdenti" +
            "fierResponse")]
        System.Threading.Tasks.Task<bool> UpdateSalesforceUsersByFederationIdentifierAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, string federationIdentifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAndContact" +
            "", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAndContact" +
            "Response")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse UpdateSalesforceCommunityUserAndContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool AssociatedAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAndContact" +
            "", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAndContact" +
            "Response")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse> UpdateSalesforceCommunityUserAndContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool AssociatedAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateContactActiveStatusByAdfsGuid", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateContactActiveStatusByAdfsGuidResp" +
            "onse")]
        int UpdateContactActiveStatusByAdfsGuid(string adfsGuid, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateContactActiveStatusByAdfsGuid", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateContactActiveStatusByAdfsGuidResp" +
            "onse")]
        System.Threading.Tasks.Task<int> UpdateContactActiveStatusByAdfsGuidAsync(string adfsGuid, bool isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserActiveStat" +
            "usByFederationIdentifier", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserActiveStat" +
            "usByFederationIdentifierResponse")]
        bool UpdateSalesforceCommunityUserActiveStatusByFederationIdentifier(string username, string emailAddress, bool isActive, bool clearFederationID, string usernameOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserActiveStat" +
            "usByFederationIdentifier", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserActiveStat" +
            "usByFederationIdentifierResponse")]
        System.Threading.Tasks.Task<bool> UpdateSalesforceCommunityUserActiveStatusByFederationIdentifierAsync(string username, string emailAddress, bool isActive, bool clearFederationID, string usernameOverride);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseName", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseNameRes" +
            "ponse")]
        System.Collections.Generic.Dictionary<string, string> GetCommunityProfileListByLicenseName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseName", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseNameRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunityProfileListByLicenseNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseNameAnd" +
            "Type", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseNameAnd" +
            "TypeResponse")]
        System.Collections.Generic.Dictionary<string, string> GetCommunityProfileListByLicenseNameAndType(string licenseName, bool isCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseNameAnd" +
            "Type", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityProfileListByLicenseNameAnd" +
            "TypeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunityProfileListByLicenseNameAndTypeAsync(string licenseName, bool isCustom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByLicenseName" +
            "", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByLicenseName" +
            "Response")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[] GetCommunityPermissionSetsByLicenseName(string name, string userCustomSettingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByLicenseName" +
            "", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByLicenseName" +
            "Response")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[]> GetCommunityPermissionSetsByLicenseNameAsync(string name, string userCustomSettingName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByCommunityNa" +
            "me", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByCommunityNa" +
            "meResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[] GetCommunityPermissionSetsByCommunityName(string communityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByCommunityNa" +
            "me", ReplyAction="http://tempuri.org/ISalesforceUserService/GetCommunityPermissionSetsByCommunityNa" +
            "meResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[]> GetCommunityPermissionSetsByCommunityNameAsync(string communityName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAllUserLicenses", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAllUserLicensesResponse")]
        System.Collections.Generic.Dictionary<string, string> GetAllUserLicenses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAllUserLicenses", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAllUserLicensesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllUserLicensesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUserClaimValues", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUserClaimValuesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimResponse GetUserClaimValues(string username, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimType[] claimTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUserClaimValues", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUserClaimValuesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimResponse> GetUserClaimValuesAsync(string username, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimType[] claimTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUsersByAccount", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUsersByAccountResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[] GetUsersByAccount(string accountId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUsersByAccount", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUsersByAccountResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[]> GetUsersByAccountAsync(string accountId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType accountType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUserRoleByAccountAndPortal", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUserRoleByAccountAndPortalResponse")]
        string GetUserRoleByAccountAndPortal(ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalRole portalRole, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalType portalType, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUserRoleByAccountAndPortal", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUserRoleByAccountAndPortalResponse")]
        System.Threading.Tasks.Task<string> GetUserRoleByAccountAndPortalAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalRole portalRole, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalType portalType, string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/CreatePartnerCommunityRegistrationCase", ReplyAction="http://tempuri.org/ISalesforceUserService/CreatePartnerCommunityRegistrationCaseR" +
            "esponse")]
        string CreatePartnerCommunityRegistrationCase(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerRegistration registrationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/CreatePartnerCommunityRegistrationCase", ReplyAction="http://tempuri.org/ISalesforceUserService/CreatePartnerCommunityRegistrationCaseR" +
            "esponse")]
        System.Threading.Tasks.Task<string> CreatePartnerCommunityRegistrationCaseAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerRegistration registrationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetNonADFSCommunityUsersByUserLicenseNa" +
            "me", ReplyAction="http://tempuri.org/ISalesforceUserService/GetNonADFSCommunityUsersByUserLicenseNa" +
            "meResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail[] GetNonADFSCommunityUsersByUserLicenseName(string[] licenseNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetNonADFSCommunityUsersByUserLicenseNa" +
            "me", ReplyAction="http://tempuri.org/ISalesforceUserService/GetNonADFSCommunityUsersByUserLicenseNa" +
            "meResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail[]> GetNonADFSCommunityUsersByUserLicenseNameAsync(string[] licenseNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAdfsInfoBy" +
            "Id", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAdfsInfoBy" +
            "IdResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse UpdateSalesforceCommunityUserAdfsInfoById(string salesforceUserId, string adfsGuid, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAdfsInfoBy" +
            "Id", ReplyAction="http://tempuri.org/ISalesforceUserService/UpdateSalesforceCommunityUserAdfsInfoBy" +
            "IdResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse> UpdateSalesforceCommunityUserAdfsInfoByIdAsync(string salesforceUserId, string adfsGuid, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUserByFederationIdentifier", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUserByFederationIdentifierResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail GetUserByFederationIdentifier(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUserByFederationIdentifier", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUserByFederationIdentifierResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail> GetUserByFederationIdentifierAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUsersBySalesforceAccountId", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUsersBySalesforceAccountIdResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[] GetUsersBySalesforceAccountId(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetUsersBySalesforceAccountId", ReplyAction="http://tempuri.org/ISalesforceUserService/GetUsersBySalesforceAccountIdResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[]> GetUsersBySalesforceAccountIdAsync(string accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetTeamForUser", ReplyAction="http://tempuri.org/ISalesforceUserService/GetTeamForUserResponse")]
        string GetTeamForUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetTeamForUser", ReplyAction="http://tempuri.org/ISalesforceUserService/GetTeamForUserResponse")]
        System.Threading.Tasks.Task<string> GetTeamForUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByContact", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByContactResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAssociatedAccountsByContact(string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByContact", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByContactResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAssociatedAccountsByContactAsync(string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByUser", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByUserResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAssociatedAccountsByUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByUser", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAssociatedAccountsByUserResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAssociatedAccountsByUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/CreateAssociatedAccountContactRelation", ReplyAction="http://tempuri.org/ISalesforceUserService/CreateAssociatedAccountContactRelationR" +
            "esponse")]
        bool CreateAssociatedAccountContactRelation(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] AccountList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/CreateAssociatedAccountContactRelation", ReplyAction="http://tempuri.org/ISalesforceUserService/CreateAssociatedAccountContactRelationR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> CreateAssociatedAccountContactRelationAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] AccountList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAccountContactRoleList", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAccountContactRoleListResponse")]
        string[] GetAccountContactRoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAccountContactRoleList", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAccountContactRoleListResponse")]
        System.Threading.Tasks.Task<string[]> GetAccountContactRoleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/RemoveAssociatedAccounts", ReplyAction="http://tempuri.org/ISalesforceUserService/RemoveAssociatedAccountsResponse")]
        bool RemoveAssociatedAccounts(string userName, string[] AccountList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/RemoveAssociatedAccounts", ReplyAction="http://tempuri.org/ISalesforceUserService/RemoveAssociatedAccountsResponse")]
        System.Threading.Tasks.Task<bool> RemoveAssociatedAccountsAsync(string userName, string[] AccountList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAccountRelatedContactRoles", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAccountRelatedContactRolesResponse")]
        string GetAccountRelatedContactRoles(string ContactId, string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetAccountRelatedContactRoles", ReplyAction="http://tempuri.org/ISalesforceUserService/GetAccountRelatedContactRolesResponse")]
        System.Threading.Tasks.Task<string> GetAccountRelatedContactRolesAsync(string ContactId, string AccountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetPrimaryAccountByUserName", ReplyAction="http://tempuri.org/ISalesforceUserService/GetPrimaryAccountByUserNameResponse")]
        string GetPrimaryAccountByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceUserService/GetPrimaryAccountByUserName", ReplyAction="http://tempuri.org/ISalesforceUserService/GetPrimaryAccountByUserNameResponse")]
        System.Threading.Tasks.Task<string> GetPrimaryAccountByUserNameAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesforceUserServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesforceUserServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceUserService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceUserService {
        
        public SalesforceUserServiceClient() {
        }
        
        public SalesforceUserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesforceUserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceUserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceUserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetPermissionSets() {
            return base.Channel.GetPermissionSets();
        }
        
        public System.Threading.Tasks.Task<string[]> GetPermissionSetsAsync() {
            return base.Channel.GetPermissionSetsAsync();
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse CreateSalesforceCommunityUserAndContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool NewFeature) {
            return base.Channel.CreateSalesforceCommunityUserAndContact(salesforceUser, contactPermissions, accountId, permissionSetIds, AccountContactRole, NewFeature);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse> CreateSalesforceCommunityUserAndContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool NewFeature) {
            return base.Channel.CreateSalesforceCommunityUserAndContactAsync(salesforceUser, contactPermissions, accountId, permissionSetIds, AccountContactRole, NewFeature);
        }
        
        public bool UpdateSalesforceUsersByFederationIdentifier(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, string federationIdentifier) {
            return base.Channel.UpdateSalesforceUsersByFederationIdentifier(salesforceUser, federationIdentifier);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSalesforceUsersByFederationIdentifierAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, string federationIdentifier) {
            return base.Channel.UpdateSalesforceUsersByFederationIdentifierAsync(salesforceUser, federationIdentifier);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse UpdateSalesforceCommunityUserAndContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool AssociatedAccount) {
            return base.Channel.UpdateSalesforceCommunityUserAndContact(salesforceUser, contactPermissions, accountId, permissionSetIds, AccountContactRole, AssociatedAccount);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse> UpdateSalesforceCommunityUserAndContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ContactPermissions contactPermissions, string accountId, string[] permissionSetIds, string AccountContactRole, bool AssociatedAccount) {
            return base.Channel.UpdateSalesforceCommunityUserAndContactAsync(salesforceUser, contactPermissions, accountId, permissionSetIds, AccountContactRole, AssociatedAccount);
        }
        
        public int UpdateContactActiveStatusByAdfsGuid(string adfsGuid, bool isActive) {
            return base.Channel.UpdateContactActiveStatusByAdfsGuid(adfsGuid, isActive);
        }
        
        public System.Threading.Tasks.Task<int> UpdateContactActiveStatusByAdfsGuidAsync(string adfsGuid, bool isActive) {
            return base.Channel.UpdateContactActiveStatusByAdfsGuidAsync(adfsGuid, isActive);
        }
        
        public bool UpdateSalesforceCommunityUserActiveStatusByFederationIdentifier(string username, string emailAddress, bool isActive, bool clearFederationID, string usernameOverride) {
            return base.Channel.UpdateSalesforceCommunityUserActiveStatusByFederationIdentifier(username, emailAddress, isActive, clearFederationID, usernameOverride);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSalesforceCommunityUserActiveStatusByFederationIdentifierAsync(string username, string emailAddress, bool isActive, bool clearFederationID, string usernameOverride) {
            return base.Channel.UpdateSalesforceCommunityUserActiveStatusByFederationIdentifierAsync(username, emailAddress, isActive, clearFederationID, usernameOverride);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCommunityProfileListByLicenseName(string name) {
            return base.Channel.GetCommunityProfileListByLicenseName(name);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunityProfileListByLicenseNameAsync(string name) {
            return base.Channel.GetCommunityProfileListByLicenseNameAsync(name);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetCommunityProfileListByLicenseNameAndType(string licenseName, bool isCustom) {
            return base.Channel.GetCommunityProfileListByLicenseNameAndType(licenseName, isCustom);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetCommunityProfileListByLicenseNameAndTypeAsync(string licenseName, bool isCustom) {
            return base.Channel.GetCommunityProfileListByLicenseNameAndTypeAsync(licenseName, isCustom);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[] GetCommunityPermissionSetsByLicenseName(string name, string userCustomSettingName) {
            return base.Channel.GetCommunityPermissionSetsByLicenseName(name, userCustomSettingName);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[]> GetCommunityPermissionSetsByLicenseNameAsync(string name, string userCustomSettingName) {
            return base.Channel.GetCommunityPermissionSetsByLicenseNameAsync(name, userCustomSettingName);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[] GetCommunityPermissionSetsByCommunityName(string communityName) {
            return base.Channel.GetCommunityPermissionSetsByCommunityName(communityName);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Permissions[]> GetCommunityPermissionSetsByCommunityNameAsync(string communityName) {
            return base.Channel.GetCommunityPermissionSetsByCommunityNameAsync(communityName);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetAllUserLicenses() {
            return base.Channel.GetAllUserLicenses();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetAllUserLicensesAsync() {
            return base.Channel.GetAllUserLicensesAsync();
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimResponse GetUserClaimValues(string username, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimType[] claimTypes) {
            return base.Channel.GetUserClaimValues(username, claimTypes);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimResponse> GetUserClaimValuesAsync(string username, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserClaimType[] claimTypes) {
            return base.Channel.GetUserClaimValuesAsync(username, claimTypes);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[] GetUsersByAccount(string accountId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType accountType) {
            return base.Channel.GetUsersByAccount(accountId, accountType);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[]> GetUsersByAccountAsync(string accountId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountType accountType) {
            return base.Channel.GetUsersByAccountAsync(accountId, accountType);
        }
        
        public string GetUserRoleByAccountAndPortal(ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalRole portalRole, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalType portalType, string accountId) {
            return base.Channel.GetUserRoleByAccountAndPortal(portalRole, portalType, accountId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserRoleByAccountAndPortalAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalRole portalRole, ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserRolePortalType portalType, string accountId) {
            return base.Channel.GetUserRoleByAccountAndPortalAsync(portalRole, portalType, accountId);
        }
        
        public string CreatePartnerCommunityRegistrationCase(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerRegistration registrationInfo) {
            return base.Channel.CreatePartnerCommunityRegistrationCase(registrationInfo);
        }
        
        public System.Threading.Tasks.Task<string> CreatePartnerCommunityRegistrationCaseAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.PartnerRegistration registrationInfo) {
            return base.Channel.CreatePartnerCommunityRegistrationCaseAsync(registrationInfo);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail[] GetNonADFSCommunityUsersByUserLicenseName(string[] licenseNames) {
            return base.Channel.GetNonADFSCommunityUsersByUserLicenseName(licenseNames);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail[]> GetNonADFSCommunityUsersByUserLicenseNameAsync(string[] licenseNames) {
            return base.Channel.GetNonADFSCommunityUsersByUserLicenseNameAsync(licenseNames);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse UpdateSalesforceCommunityUserAdfsInfoById(string salesforceUserId, string adfsGuid, string username) {
            return base.Channel.UpdateSalesforceCommunityUserAdfsInfoById(salesforceUserId, adfsGuid, username);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserUpsertResponse> UpdateSalesforceCommunityUserAdfsInfoByIdAsync(string salesforceUserId, string adfsGuid, string username) {
            return base.Channel.UpdateSalesforceCommunityUserAdfsInfoByIdAsync(salesforceUserId, adfsGuid, username);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail GetUserByFederationIdentifier(string username) {
            return base.Channel.GetUserByFederationIdentifier(username);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.UserDetail> GetUserByFederationIdentifierAsync(string username) {
            return base.Channel.GetUserByFederationIdentifierAsync(username);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[] GetUsersBySalesforceAccountId(string accountId) {
            return base.Channel.GetUsersBySalesforceAccountId(accountId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.AccountUser[]> GetUsersBySalesforceAccountIdAsync(string accountId) {
            return base.Channel.GetUsersBySalesforceAccountIdAsync(accountId);
        }
        
        public string GetTeamForUser(string username) {
            return base.Channel.GetTeamForUser(username);
        }
        
        public System.Threading.Tasks.Task<string> GetTeamForUserAsync(string username) {
            return base.Channel.GetTeamForUserAsync(username);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAssociatedAccountsByContact(string adfsGuid) {
            return base.Channel.GetAssociatedAccountsByContact(adfsGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAssociatedAccountsByContactAsync(string adfsGuid) {
            return base.Channel.GetAssociatedAccountsByContactAsync(adfsGuid);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAssociatedAccountsByUser(string username) {
            return base.Channel.GetAssociatedAccountsByUser(username);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAssociatedAccountsByUserAsync(string username) {
            return base.Channel.GetAssociatedAccountsByUserAsync(username);
        }
        
        public bool CreateAssociatedAccountContactRelation(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] AccountList) {
            return base.Channel.CreateAssociatedAccountContactRelation(salesforceUser, AccountList);
        }
        
        public System.Threading.Tasks.Task<bool> CreateAssociatedAccountContactRelationAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.SalesforceUser salesforceUser, ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] AccountList) {
            return base.Channel.CreateAssociatedAccountContactRelationAsync(salesforceUser, AccountList);
        }
        
        public string[] GetAccountContactRoleList() {
            return base.Channel.GetAccountContactRoleList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAccountContactRoleListAsync() {
            return base.Channel.GetAccountContactRoleListAsync();
        }
        
        public bool RemoveAssociatedAccounts(string userName, string[] AccountList) {
            return base.Channel.RemoveAssociatedAccounts(userName, AccountList);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveAssociatedAccountsAsync(string userName, string[] AccountList) {
            return base.Channel.RemoveAssociatedAccountsAsync(userName, AccountList);
        }
        
        public string GetAccountRelatedContactRoles(string ContactId, string AccountId) {
            return base.Channel.GetAccountRelatedContactRoles(ContactId, AccountId);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountRelatedContactRolesAsync(string ContactId, string AccountId) {
            return base.Channel.GetAccountRelatedContactRolesAsync(ContactId, AccountId);
        }
        
        public string GetPrimaryAccountByUserName(string userName) {
            return base.Channel.GetPrimaryAccountByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<string> GetPrimaryAccountByUserNameAsync(string userName) {
            return base.Channel.GetPrimaryAccountByUserNameAsync(userName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.ISalesforceNotificationService")]
    public interface ISalesforceNotificationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetTimeZones", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetTimeZonesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationTimeZone[] GetTimeZones();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetTimeZones", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetTimeZonesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationTimeZone[]> GetTimeZonesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetXMPersonGuid", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetXMPersonGuidResponse")]
        string GetXMPersonGuid(string AdfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetXMPersonGuid", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetXMPersonGuidResponse")]
        System.Threading.Tasks.Task<string> GetXMPersonGuidAsync(string AdfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetXMPersonId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetXMPersonIdResponse")]
        string GetXMPersonId(string xmGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetXMPersonId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetXMPersonIdResponse")]
        System.Threading.Tasks.Task<string> GetXMPersonIdAsync(string xmGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactHasUserInXmatters", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactHasUserInXmattersResp" +
            "onse")]
        bool GetContactHasUserInXmatters(string AdfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactHasUserInXmatters", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactHasUserInXmattersResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> GetContactHasUserInXmattersAsync(string AdfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactsByAdfsGuid", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactsByAdfsGuidResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByAdfsGuid(string AdfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactsByAdfsGuid", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactsByAdfsGuidResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByAdfsGuidAsync(string AdfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/CreateXMPerson", ReplyAction="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonResponse")]
        bool CreateXMPerson(string AdfsGuid, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/CreateXMPerson", ReplyAction="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonResponse")]
        System.Threading.Tasks.Task<bool> CreateXMPersonAsync(string AdfsGuid, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonByContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonByContactIdRespon" +
            "se")]
        bool CreateXMPersonByContactId(string ContactId, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonByContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonByContactIdRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> CreateXMPersonByContactIdAsync(string ContactId, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonAndUpdateContacts" +
            "", ReplyAction="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonAndUpdateContacts" +
            "Response")]
        bool CreateXMPersonAndUpdateContacts(string primaryContactId, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonAndUpdateContacts" +
            "", ReplyAction="http://tempuri.org/ISalesforceNotificationService/CreateXMPersonAndUpdateContacts" +
            "Response")]
        System.Threading.Tasks.Task<bool> CreateXMPersonAndUpdateContactsAsync(string primaryContactId, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationContacts", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationContactsRespo" +
            "nse")]
        bool UpdateNotificationContacts(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationContacts", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationContactsRespo" +
            "nse")]
        System.Threading.Tasks.Task<bool> UpdateNotificationContactsAsync(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfileByCont" +
            "actId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfileByCont" +
            "actIdResponse")]
        bool UpdateNotificationProfileByContactId(string ContactId, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfileByCont" +
            "actId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfileByCont" +
            "actIdResponse")]
        System.Threading.Tasks.Task<bool> UpdateNotificationProfileByContactIdAsync(string ContactId, string XMPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/AssociateProfiletoContact", ReplyAction="http://tempuri.org/ISalesforceNotificationService/AssociateProfiletoContactRespon" +
            "se")]
        bool AssociateProfiletoContact(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/AssociateProfiletoContact", ReplyAction="http://tempuri.org/ISalesforceNotificationService/AssociateProfiletoContactRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> AssociateProfiletoContactAsync(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/DissociateNotificationContacts", ReplyAction="http://tempuri.org/ISalesforceNotificationService/DissociateNotificationContactsR" +
            "esponse")]
        bool DissociateNotificationContacts(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/DissociateNotificationContacts", ReplyAction="http://tempuri.org/ISalesforceNotificationService/DissociateNotificationContactsR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> DissociateNotificationContactsAsync(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfile", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfileRespon" +
            "se")]
        bool UpdateNotificationProfile(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfile", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateNotificationProfileRespon" +
            "se")]
        System.Threading.Tasks.Task<bool> UpdateNotificationProfileAsync(string AdfsGuid, string XMPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateContactWithXMPersonId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateContactWithXMPersonIdResp" +
            "onse")]
        bool UpdateContactWithXMPersonId(string[] contactIds, string xmPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateContactWithXMPersonId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateContactWithXMPersonIdResp" +
            "onse")]
        System.Threading.Tasks.Task<bool> UpdateContactWithXMPersonIdAsync(string[] contactIds, string xmPersonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactsFirstnameLastNa" +
            "me", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactsFirstnameLastNa" +
            "meResponse")]
        bool UpdateSFContactsFirstnameLastName(string firstname, string lastName, string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactsFirstnameLastNa" +
            "me", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactsFirstnameLastNa" +
            "meResponse")]
        System.Threading.Tasks.Task<bool> UpdateSFContactsFirstnameLastNameAsync(string firstname, string lastName, string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactNameByContactID", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactNameByContactIDR" +
            "esponse")]
        bool UpdateSFContactNameByContactID(string firstName, string lastName, string contactid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactNameByContactID", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpdateSFContactNameByContactIDR" +
            "esponse")]
        System.Threading.Tasks.Task<bool> UpdateSFContactNameByContactIDAsync(string firstName, string lastName, string contactid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/IsPartnerContactExist", ReplyAction="http://tempuri.org/ISalesforceNotificationService/IsPartnerContactExistResponse")]
        bool IsPartnerContactExist(string partnerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/IsPartnerContactExist", ReplyAction="http://tempuri.org/ISalesforceNotificationService/IsPartnerContactExistResponse")]
        System.Threading.Tasks.Task<bool> IsPartnerContactExistAsync(string partnerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/AddContactByPartnerContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/AddContactByPartnerContactIdRes" +
            "ponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact AddContactByPartnerContactId(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/AddContactByPartnerContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/AddContactByPartnerContactIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact> AddContactByPartnerContactIdAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpsertContact", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpsertContactResponse")]
        bool UpsertContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/UpsertContact", ReplyAction="http://tempuri.org/ISalesforceNotificationService/UpsertContactResponse")]
        System.Threading.Tasks.Task<bool> UpsertContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactByPartnerContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactByPartnerContactIdRes" +
            "ponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact GetContactByPartnerContactId(string partnerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactByPartnerContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactByPartnerContactIdRes" +
            "ponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact> GetContactByPartnerContactIdAsync(string partnerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactIdRe" +
            "sponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByPartnerContactId(string partnerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByPartnerContactIdAsync(string partnerContactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactIdOr" +
            "Email", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactIdOr" +
            "EmailResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByPartnerContactIdOrEmail(string partnerContactId, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactIdOr" +
            "Email", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetContactsByPartnerContactIdOr" +
            "EmailResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByPartnerContactIdOrEmailAsync(string partnerContactId, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetRelatedContactsByContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetRelatedContactsByContactIdRe" +
            "sponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetRelatedContactsByContactId(string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetRelatedContactsByContactId", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetRelatedContactsByContactIdRe" +
            "sponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetRelatedContactsByContactIdAsync(string contactId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetAllContactsByAccount", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetAllContactsByAccountResponse" +
            "")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetAllContactsByAccount(string accountId, int limitSize, System.DateTime createdDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetAllContactsByAccount", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetAllContactsByAccountResponse" +
            "")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetAllContactsByAccountAsync(string accountId, int limitSize, System.DateTime createdDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetXMPartnerPrefix", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetXMPartnerPrefixResponse")]
        string GetXMPartnerPrefix(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceNotificationService/GetXMPartnerPrefix", ReplyAction="http://tempuri.org/ISalesforceNotificationService/GetXMPartnerPrefixResponse")]
        System.Threading.Tasks.Task<string> GetXMPartnerPrefixAsync(string accountNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesforceNotificationServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceNotificationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesforceNotificationServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceNotificationService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceNotificationService {
        
        public SalesforceNotificationServiceClient() {
        }
        
        public SalesforceNotificationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesforceNotificationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceNotificationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceNotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationTimeZone[] GetTimeZones() {
            return base.Channel.GetTimeZones();
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationTimeZone[]> GetTimeZonesAsync() {
            return base.Channel.GetTimeZonesAsync();
        }
        
        public string GetXMPersonGuid(string AdfsGuid) {
            return base.Channel.GetXMPersonGuid(AdfsGuid);
        }
        
        public System.Threading.Tasks.Task<string> GetXMPersonGuidAsync(string AdfsGuid) {
            return base.Channel.GetXMPersonGuidAsync(AdfsGuid);
        }
        
        public string GetXMPersonId(string xmGuid) {
            return base.Channel.GetXMPersonId(xmGuid);
        }
        
        public System.Threading.Tasks.Task<string> GetXMPersonIdAsync(string xmGuid) {
            return base.Channel.GetXMPersonIdAsync(xmGuid);
        }
        
        public bool GetContactHasUserInXmatters(string AdfsGuid) {
            return base.Channel.GetContactHasUserInXmatters(AdfsGuid);
        }
        
        public System.Threading.Tasks.Task<bool> GetContactHasUserInXmattersAsync(string AdfsGuid) {
            return base.Channel.GetContactHasUserInXmattersAsync(AdfsGuid);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByAdfsGuid(string AdfsGuid) {
            return base.Channel.GetContactsByAdfsGuid(AdfsGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByAdfsGuidAsync(string AdfsGuid) {
            return base.Channel.GetContactsByAdfsGuidAsync(AdfsGuid);
        }
        
        public bool CreateXMPerson(string AdfsGuid, string XMPersonGuid) {
            return base.Channel.CreateXMPerson(AdfsGuid, XMPersonGuid);
        }
        
        public System.Threading.Tasks.Task<bool> CreateXMPersonAsync(string AdfsGuid, string XMPersonGuid) {
            return base.Channel.CreateXMPersonAsync(AdfsGuid, XMPersonGuid);
        }
        
        public bool CreateXMPersonByContactId(string ContactId, string XMPersonGuid) {
            return base.Channel.CreateXMPersonByContactId(ContactId, XMPersonGuid);
        }
        
        public System.Threading.Tasks.Task<bool> CreateXMPersonByContactIdAsync(string ContactId, string XMPersonGuid) {
            return base.Channel.CreateXMPersonByContactIdAsync(ContactId, XMPersonGuid);
        }
        
        public bool CreateXMPersonAndUpdateContacts(string primaryContactId, string XMPersonGuid) {
            return base.Channel.CreateXMPersonAndUpdateContacts(primaryContactId, XMPersonGuid);
        }
        
        public System.Threading.Tasks.Task<bool> CreateXMPersonAndUpdateContactsAsync(string primaryContactId, string XMPersonGuid) {
            return base.Channel.CreateXMPersonAndUpdateContactsAsync(primaryContactId, XMPersonGuid);
        }
        
        public bool UpdateNotificationContacts(string AdfsGuid, string XMPersonId) {
            return base.Channel.UpdateNotificationContacts(AdfsGuid, XMPersonId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateNotificationContactsAsync(string AdfsGuid, string XMPersonId) {
            return base.Channel.UpdateNotificationContactsAsync(AdfsGuid, XMPersonId);
        }
        
        public bool UpdateNotificationProfileByContactId(string ContactId, string XMPersonGuid) {
            return base.Channel.UpdateNotificationProfileByContactId(ContactId, XMPersonGuid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateNotificationProfileByContactIdAsync(string ContactId, string XMPersonGuid) {
            return base.Channel.UpdateNotificationProfileByContactIdAsync(ContactId, XMPersonGuid);
        }
        
        public bool AssociateProfiletoContact(string AdfsGuid, string XMPersonId) {
            return base.Channel.AssociateProfiletoContact(AdfsGuid, XMPersonId);
        }
        
        public System.Threading.Tasks.Task<bool> AssociateProfiletoContactAsync(string AdfsGuid, string XMPersonId) {
            return base.Channel.AssociateProfiletoContactAsync(AdfsGuid, XMPersonId);
        }
        
        public bool DissociateNotificationContacts(string AdfsGuid, string XMPersonId) {
            return base.Channel.DissociateNotificationContacts(AdfsGuid, XMPersonId);
        }
        
        public System.Threading.Tasks.Task<bool> DissociateNotificationContactsAsync(string AdfsGuid, string XMPersonId) {
            return base.Channel.DissociateNotificationContactsAsync(AdfsGuid, XMPersonId);
        }
        
        public bool UpdateNotificationProfile(string AdfsGuid, string XMPersonId) {
            return base.Channel.UpdateNotificationProfile(AdfsGuid, XMPersonId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateNotificationProfileAsync(string AdfsGuid, string XMPersonId) {
            return base.Channel.UpdateNotificationProfileAsync(AdfsGuid, XMPersonId);
        }
        
        public bool UpdateContactWithXMPersonId(string[] contactIds, string xmPersonId) {
            return base.Channel.UpdateContactWithXMPersonId(contactIds, xmPersonId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContactWithXMPersonIdAsync(string[] contactIds, string xmPersonId) {
            return base.Channel.UpdateContactWithXMPersonIdAsync(contactIds, xmPersonId);
        }
        
        public bool UpdateSFContactsFirstnameLastName(string firstname, string lastName, string adfsGuid) {
            return base.Channel.UpdateSFContactsFirstnameLastName(firstname, lastName, adfsGuid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSFContactsFirstnameLastNameAsync(string firstname, string lastName, string adfsGuid) {
            return base.Channel.UpdateSFContactsFirstnameLastNameAsync(firstname, lastName, adfsGuid);
        }
        
        public bool UpdateSFContactNameByContactID(string firstName, string lastName, string contactid) {
            return base.Channel.UpdateSFContactNameByContactID(firstName, lastName, contactid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSFContactNameByContactIDAsync(string firstName, string lastName, string contactid) {
            return base.Channel.UpdateSFContactNameByContactIDAsync(firstName, lastName, contactid);
        }
        
        public bool IsPartnerContactExist(string partnerContactId) {
            return base.Channel.IsPartnerContactExist(partnerContactId);
        }
        
        public System.Threading.Tasks.Task<bool> IsPartnerContactExistAsync(string partnerContactId) {
            return base.Channel.IsPartnerContactExistAsync(partnerContactId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact AddContactByPartnerContactId(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact) {
            return base.Channel.AddContactByPartnerContactId(notificationContact);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact> AddContactByPartnerContactIdAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact) {
            return base.Channel.AddContactByPartnerContactIdAsync(notificationContact);
        }
        
        public bool UpsertContact(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact) {
            return base.Channel.UpsertContact(notificationContact);
        }
        
        public System.Threading.Tasks.Task<bool> UpsertContactAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact notificationContact) {
            return base.Channel.UpsertContactAsync(notificationContact);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact GetContactByPartnerContactId(string partnerContactId) {
            return base.Channel.GetContactByPartnerContactId(partnerContactId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact> GetContactByPartnerContactIdAsync(string partnerContactId) {
            return base.Channel.GetContactByPartnerContactIdAsync(partnerContactId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByPartnerContactId(string partnerContactId) {
            return base.Channel.GetContactsByPartnerContactId(partnerContactId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByPartnerContactIdAsync(string partnerContactId) {
            return base.Channel.GetContactsByPartnerContactIdAsync(partnerContactId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByPartnerContactIdOrEmail(string partnerContactId, string emailAddress) {
            return base.Channel.GetContactsByPartnerContactIdOrEmail(partnerContactId, emailAddress);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByPartnerContactIdOrEmailAsync(string partnerContactId, string emailAddress) {
            return base.Channel.GetContactsByPartnerContactIdOrEmailAsync(partnerContactId, emailAddress);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetRelatedContactsByContactId(string contactId) {
            return base.Channel.GetRelatedContactsByContactId(contactId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetRelatedContactsByContactIdAsync(string contactId) {
            return base.Channel.GetRelatedContactsByContactIdAsync(contactId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetAllContactsByAccount(string accountId, int limitSize, System.DateTime createdDate) {
            return base.Channel.GetAllContactsByAccount(accountId, limitSize, createdDate);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetAllContactsByAccountAsync(string accountId, int limitSize, System.DateTime createdDate) {
            return base.Channel.GetAllContactsByAccountAsync(accountId, limitSize, createdDate);
        }
        
        public string GetXMPartnerPrefix(string accountNumber) {
            return base.Channel.GetXMPartnerPrefix(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetXMPartnerPrefixAsync(string accountNumber) {
            return base.Channel.GetXMPartnerPrefixAsync(accountNumber);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.IXMattersIntegrationService")]
    public interface IXMattersIntegrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetXMPersonIdsByNotificationGroupI" +
            "d", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetXMPersonIdsByNotificationGroupI" +
            "dResponse")]
        string[] GetXMPersonIdsByNotificationGroupId(string notificationGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetXMPersonIdsByNotificationGroupI" +
            "d", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetXMPersonIdsByNotificationGroupI" +
            "dResponse")]
        System.Threading.Tasks.Task<string[]> GetXMPersonIdsByNotificationGroupIdAsync(string notificationGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetXMNotificationGroupNameById", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetXMNotificationGroupNameByIdResp" +
            "onse")]
        string GetXMNotificationGroupNameById(string notificationGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetXMNotificationGroupNameById", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetXMNotificationGroupNameByIdResp" +
            "onse")]
        System.Threading.Tasks.Task<string> GetXMNotificationGroupNameByIdAsync(string notificationGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/UpdateNotificationGroupStatus", ReplyAction="http://tempuri.org/IXMattersIntegrationService/UpdateNotificationGroupStatusRespo" +
            "nse")]
        void UpdateNotificationGroupStatus(string notificationGroupId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationGroupStatus notificationGroupStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/UpdateNotificationGroupStatus", ReplyAction="http://tempuri.org/IXMattersIntegrationService/UpdateNotificationGroupStatusRespo" +
            "nse")]
        System.Threading.Tasks.Task UpdateNotificationGroupStatusAsync(string notificationGroupId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationGroupStatus notificationGroupStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetXMProfileDetails", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetXMProfileDetailsResponse")]
        System.Collections.Generic.Dictionary<string, ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMUserDetails> GetXMProfileDetails(string contactId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetXMProfileDetails", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetXMProfileDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMUserDetails>> GetXMProfileDetailsAsync(string contactId, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetAccountByProduct", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetAccountByProductResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAccountByProduct(string[] includedProduct, string[] excludedProduct, int pageSize, int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetAccountByProduct", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetAccountByProductResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAccountByProductAsync(string[] includedProduct, string[] excludedProduct, int pageSize, int pageNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetContactByProduct", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetContactByProductResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactByProduct(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] productAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetContactByProduct", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetContactByProductResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactByProductAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] productAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetProductStatusByAccountId", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetProductStatusByAccountIdRespons" +
            "e")]
        string[] GetProductStatusByAccountId(string accoundId, string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetProductStatusByAccountId", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetProductStatusByAccountIdRespons" +
            "e")]
        System.Threading.Tasks.Task<string[]> GetProductStatusByAccountIdAsync(string accoundId, string productName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetAuditTypes", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetAuditTypesResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAuditType[] GetAuditTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetAuditTypes", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetAuditTypesResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAuditType[]> GetAuditTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/InsertAudits", ReplyAction="http://tempuri.org/IXMattersIntegrationService/InsertAuditsResponse")]
        bool InsertAudits(ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[] audits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/InsertAudits", ReplyAction="http://tempuri.org/IXMattersIntegrationService/InsertAuditsResponse")]
        System.Threading.Tasks.Task<bool> InsertAuditsAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[] audits);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetDistinctAuditLogsByDate", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetDistinctAuditLogsByDateResponse" +
            "")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[] GetDistinctAuditLogsByDate(System.DateTime fromDate, System.DateTime toDate, int pageSize, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetDistinctAuditLogsByDate", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetDistinctAuditLogsByDateResponse" +
            "")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[]> GetDistinctAuditLogsByDateAsync(System.DateTime fromDate, System.DateTime toDate, int pageSize, int offset);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetContactsByXMPersonGuid", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetContactsByXMPersonGuidResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByXMPersonGuid(string xmPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetContactsByXMPersonGuid", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetContactsByXMPersonGuidResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByXMPersonGuidAsync(string xmPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/UpdateContactForRoles", ReplyAction="http://tempuri.org/IXMattersIntegrationService/UpdateContactForRolesResponse")]
        bool UpdateContactForRoles(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/UpdateContactForRoles", ReplyAction="http://tempuri.org/IXMattersIntegrationService/UpdateContactForRolesResponse")]
        System.Threading.Tasks.Task<bool> UpdateContactForRolesAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetAllContactsByActiveXMProfile", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetAllContactsByActiveXMProfileRes" +
            "ponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetAllContactsByActiveXMProfile(System.DateTime createdDate, int limitSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetAllContactsByActiveXMProfile", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetAllContactsByActiveXMProfileRes" +
            "ponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetAllContactsByActiveXMProfileAsync(System.DateTime createdDate, int limitSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetRelatedContacts", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetRelatedContactsResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetRelatedContacts(string adfsGuid, string xmPersonGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXMattersIntegrationService/GetRelatedContacts", ReplyAction="http://tempuri.org/IXMattersIntegrationService/GetRelatedContactsResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetRelatedContactsAsync(string adfsGuid, string xmPersonGuid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXMattersIntegrationServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.IXMattersIntegrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XMattersIntegrationServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.IXMattersIntegrationService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.IXMattersIntegrationService {
        
        public XMattersIntegrationServiceClient() {
        }
        
        public XMattersIntegrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XMattersIntegrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XMattersIntegrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XMattersIntegrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] GetXMPersonIdsByNotificationGroupId(string notificationGroupId) {
            return base.Channel.GetXMPersonIdsByNotificationGroupId(notificationGroupId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetXMPersonIdsByNotificationGroupIdAsync(string notificationGroupId) {
            return base.Channel.GetXMPersonIdsByNotificationGroupIdAsync(notificationGroupId);
        }
        
        public string GetXMNotificationGroupNameById(string notificationGroupId) {
            return base.Channel.GetXMNotificationGroupNameById(notificationGroupId);
        }
        
        public System.Threading.Tasks.Task<string> GetXMNotificationGroupNameByIdAsync(string notificationGroupId) {
            return base.Channel.GetXMNotificationGroupNameByIdAsync(notificationGroupId);
        }
        
        public void UpdateNotificationGroupStatus(string notificationGroupId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationGroupStatus notificationGroupStatus) {
            base.Channel.UpdateNotificationGroupStatus(notificationGroupId, notificationGroupStatus);
        }
        
        public System.Threading.Tasks.Task UpdateNotificationGroupStatusAsync(string notificationGroupId, ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationGroupStatus notificationGroupStatus) {
            return base.Channel.UpdateNotificationGroupStatusAsync(notificationGroupId, notificationGroupStatus);
        }
        
        public System.Collections.Generic.Dictionary<string, ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMUserDetails> GetXMProfileDetails(string contactId, string type) {
            return base.Channel.GetXMProfileDetails(contactId, type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMUserDetails>> GetXMProfileDetailsAsync(string contactId, string type) {
            return base.Channel.GetXMProfileDetailsAsync(contactId, type);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] GetAccountByProduct(string[] includedProduct, string[] excludedProduct, int pageSize, int pageNumber) {
            return base.Channel.GetAccountByProduct(includedProduct, excludedProduct, pageSize, pageNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[]> GetAccountByProductAsync(string[] includedProduct, string[] excludedProduct, int pageSize, int pageNumber) {
            return base.Channel.GetAccountByProductAsync(includedProduct, excludedProduct, pageSize, pageNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactByProduct(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] productAccount) {
            return base.Channel.GetContactByProduct(productAccount);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactByProductAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.Account[] productAccount) {
            return base.Channel.GetContactByProductAsync(productAccount);
        }
        
        public string[] GetProductStatusByAccountId(string accoundId, string productName) {
            return base.Channel.GetProductStatusByAccountId(accoundId, productName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetProductStatusByAccountIdAsync(string accoundId, string productName) {
            return base.Channel.GetProductStatusByAccountIdAsync(accoundId, productName);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAuditType[] GetAuditTypes() {
            return base.Channel.GetAuditTypes();
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAuditType[]> GetAuditTypesAsync() {
            return base.Channel.GetAuditTypesAsync();
        }
        
        public bool InsertAudits(ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[] audits) {
            return base.Channel.InsertAudits(audits);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAuditsAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[] audits) {
            return base.Channel.InsertAuditsAsync(audits);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[] GetDistinctAuditLogsByDate(System.DateTime fromDate, System.DateTime toDate, int pageSize, int offset) {
            return base.Channel.GetDistinctAuditLogsByDate(fromDate, toDate, pageSize, offset);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.XMAudit[]> GetDistinctAuditLogsByDateAsync(System.DateTime fromDate, System.DateTime toDate, int pageSize, int offset) {
            return base.Channel.GetDistinctAuditLogsByDateAsync(fromDate, toDate, pageSize, offset);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetContactsByXMPersonGuid(string xmPersonGuid) {
            return base.Channel.GetContactsByXMPersonGuid(xmPersonGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetContactsByXMPersonGuidAsync(string xmPersonGuid) {
            return base.Channel.GetContactsByXMPersonGuidAsync(xmPersonGuid);
        }
        
        public bool UpdateContactForRoles(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact contact) {
            return base.Channel.UpdateContactForRoles(contact);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateContactForRolesAsync(ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact contact) {
            return base.Channel.UpdateContactForRolesAsync(contact);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetAllContactsByActiveXMProfile(System.DateTime createdDate, int limitSize) {
            return base.Channel.GetAllContactsByActiveXMProfile(createdDate, limitSize);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetAllContactsByActiveXMProfileAsync(System.DateTime createdDate, int limitSize) {
            return base.Channel.GetAllContactsByActiveXMProfileAsync(createdDate, limitSize);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[] GetRelatedContacts(string adfsGuid, string xmPersonGuid) {
            return base.Channel.GetRelatedContacts(adfsGuid, xmPersonGuid);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.NotificationContact[]> GetRelatedContactsAsync(string adfsGuid, string xmPersonGuid) {
            return base.Channel.GetRelatedContactsAsync(adfsGuid, xmPersonGuid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.ISalesforceContractService")]
    public interface ISalesforceContractService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceContractService/GetOpportunity", ReplyAction="http://tempuri.org/ISalesforceContractService/GetOpportunityResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Opportunity GetOpportunity(string opportunityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceContractService/GetOpportunity", ReplyAction="http://tempuri.org/ISalesforceContractService/GetOpportunityResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Opportunity> GetOpportunityAsync(string opportunityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceContractService/GetQuoteDetailsByQuoteId", ReplyAction="http://tempuri.org/ISalesforceContractService/GetQuoteDetailsByQuoteIdResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.Quote GetQuoteDetailsByQuoteId(string quoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceContractService/GetQuoteDetailsByQuoteId", ReplyAction="http://tempuri.org/ISalesforceContractService/GetQuoteDetailsByQuoteIdResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Quote> GetQuoteDetailsByQuoteIdAsync(string quoteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceContractService/GetQuoteLinesByQuoteIdAndQuoteTempl" +
            "ate", ReplyAction="http://tempuri.org/ISalesforceContractService/GetQuoteLinesByQuoteIdAndQuoteTempl" +
            "ateResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.QuoteLine[] GetQuoteLinesByQuoteIdAndQuoteTemplate(string quoteId, string quoteTemplateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceContractService/GetQuoteLinesByQuoteIdAndQuoteTempl" +
            "ate", ReplyAction="http://tempuri.org/ISalesforceContractService/GetQuoteLinesByQuoteIdAndQuoteTempl" +
            "ateResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.QuoteLine[]> GetQuoteLinesByQuoteIdAndQuoteTemplateAsync(string quoteId, string quoteTemplateId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesforceContractServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceContractService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesforceContractServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceContractService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceContractService {
        
        public SalesforceContractServiceClient() {
        }
        
        public SalesforceContractServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesforceContractServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceContractServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceContractServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Opportunity GetOpportunity(string opportunityId) {
            return base.Channel.GetOpportunity(opportunityId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Opportunity> GetOpportunityAsync(string opportunityId) {
            return base.Channel.GetOpportunityAsync(opportunityId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.Quote GetQuoteDetailsByQuoteId(string quoteId) {
            return base.Channel.GetQuoteDetailsByQuoteId(quoteId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.Quote> GetQuoteDetailsByQuoteIdAsync(string quoteId) {
            return base.Channel.GetQuoteDetailsByQuoteIdAsync(quoteId);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.QuoteLine[] GetQuoteLinesByQuoteIdAndQuoteTemplate(string quoteId, string quoteTemplateId) {
            return base.Channel.GetQuoteLinesByQuoteIdAndQuoteTemplate(quoteId, quoteTemplateId);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.QuoteLine[]> GetQuoteLinesByQuoteIdAndQuoteTemplateAsync(string quoteId, string quoteTemplateId) {
            return base.Channel.GetQuoteLinesByQuoteIdAndQuoteTemplateAsync(quoteId, quoteTemplateId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.ISalesforceGoLiveService")]
    public interface ISalesforceGoLiveService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveAssetList", ReplyAction="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveAssetListResponse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive GetProductGoLiveAssetList(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveAssetList", ReplyAction="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveAssetListResponse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive> GetProductGoLiveAssetListAsync(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveSubscriptionList", ReplyAction="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveSubscriptionListRespo" +
            "nse")]
        ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive GetProductGoLiveSubscriptionList(string caseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveSubscriptionList", ReplyAction="http://tempuri.org/ISalesforceGoLiveService/GetProductGoLiveSubscriptionListRespo" +
            "nse")]
        System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive> GetProductGoLiveSubscriptionListAsync(string caseNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalesforceGoLiveServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceGoLiveService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalesforceGoLiveServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceGoLiveService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.ISalesforceGoLiveService {
        
        public SalesforceGoLiveServiceClient() {
        }
        
        public SalesforceGoLiveServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalesforceGoLiveServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceGoLiveServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalesforceGoLiveServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive GetProductGoLiveAssetList(string caseNumber) {
            return base.Channel.GetProductGoLiveAssetList(caseNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive> GetProductGoLiveAssetListAsync(string caseNumber) {
            return base.Channel.GetProductGoLiveAssetListAsync(caseNumber);
        }
        
        public ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive GetProductGoLiveSubscriptionList(string caseNumber) {
            return base.Channel.GetProductGoLiveSubscriptionList(caseNumber);
        }
        
        public System.Threading.Tasks.Task<ManageMyNotificationsBusinessLayer.inContactSalesforceService.ProductGoLive> GetProductGoLiveSubscriptionListAsync(string caseNumber) {
            return base.Channel.GetProductGoLiveSubscriptionListAsync(caseNumber);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="inContactSalesforceService.IBrandingService")]
    public interface IBrandingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetBrandingContentbyAccountNumber", ReplyAction="http://tempuri.org/IBrandingService/GetBrandingContentbyAccountNumberResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBrandingContentbyAccountNumber(string AccountNumber, string[] cssprop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetBrandingContentbyAccountNumber", ReplyAction="http://tempuri.org/IBrandingService/GetBrandingContentbyAccountNumberResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBrandingContentbyAccountNumberAsync(string AccountNumber, string[] cssprop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetBrandingContentbyAdfsGUID", ReplyAction="http://tempuri.org/IBrandingService/GetBrandingContentbyAdfsGUIDResponse")]
        System.Collections.Generic.Dictionary<string, string> GetBrandingContentbyAdfsGUID(string adfsGuid, string[] cssprop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetBrandingContentbyAdfsGUID", ReplyAction="http://tempuri.org/IBrandingService/GetBrandingContentbyAdfsGUIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBrandingContentbyAdfsGUIDAsync(string adfsGuid, string[] cssprop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetLogoUrlByAccountNumber", ReplyAction="http://tempuri.org/IBrandingService/GetLogoUrlByAccountNumberResponse")]
        string GetLogoUrlByAccountNumber(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetLogoUrlByAccountNumber", ReplyAction="http://tempuri.org/IBrandingService/GetLogoUrlByAccountNumberResponse")]
        System.Threading.Tasks.Task<string> GetLogoUrlByAccountNumberAsync(string accountNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetAccountNoIfOnlyOneParentAccountbyAdfsGUID", ReplyAction="http://tempuri.org/IBrandingService/GetAccountNoIfOnlyOneParentAccountbyAdfsGUIDR" +
            "esponse")]
        string GetAccountNoIfOnlyOneParentAccountbyAdfsGUID(string adfsGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrandingService/GetAccountNoIfOnlyOneParentAccountbyAdfsGUID", ReplyAction="http://tempuri.org/IBrandingService/GetAccountNoIfOnlyOneParentAccountbyAdfsGUIDR" +
            "esponse")]
        System.Threading.Tasks.Task<string> GetAccountNoIfOnlyOneParentAccountbyAdfsGUIDAsync(string adfsGuid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBrandingServiceChannel : ManageMyNotificationsBusinessLayer.inContactSalesforceService.IBrandingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrandingServiceClient : System.ServiceModel.ClientBase<ManageMyNotificationsBusinessLayer.inContactSalesforceService.IBrandingService>, ManageMyNotificationsBusinessLayer.inContactSalesforceService.IBrandingService {
        
        public BrandingServiceClient() {
        }
        
        public BrandingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrandingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrandingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrandingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBrandingContentbyAccountNumber(string AccountNumber, string[] cssprop) {
            return base.Channel.GetBrandingContentbyAccountNumber(AccountNumber, cssprop);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBrandingContentbyAccountNumberAsync(string AccountNumber, string[] cssprop) {
            return base.Channel.GetBrandingContentbyAccountNumberAsync(AccountNumber, cssprop);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetBrandingContentbyAdfsGUID(string adfsGuid, string[] cssprop) {
            return base.Channel.GetBrandingContentbyAdfsGUID(adfsGuid, cssprop);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetBrandingContentbyAdfsGUIDAsync(string adfsGuid, string[] cssprop) {
            return base.Channel.GetBrandingContentbyAdfsGUIDAsync(adfsGuid, cssprop);
        }
        
        public string GetLogoUrlByAccountNumber(string accountNumber) {
            return base.Channel.GetLogoUrlByAccountNumber(accountNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetLogoUrlByAccountNumberAsync(string accountNumber) {
            return base.Channel.GetLogoUrlByAccountNumberAsync(accountNumber);
        }
        
        public string GetAccountNoIfOnlyOneParentAccountbyAdfsGUID(string adfsGuid) {
            return base.Channel.GetAccountNoIfOnlyOneParentAccountbyAdfsGUID(adfsGuid);
        }
        
        public System.Threading.Tasks.Task<string> GetAccountNoIfOnlyOneParentAccountbyAdfsGUIDAsync(string adfsGuid) {
            return base.Channel.GetAccountNoIfOnlyOneParentAccountbyAdfsGUIDAsync(adfsGuid);
        }
    }
}
